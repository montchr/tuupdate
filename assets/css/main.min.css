@charset "UTF-8";
/*------------------------------------*\
    TEMPLE UPDATE -- STYLE.CSS
\*------------------------------------*/
/**
 * Setup
 *
 * Files must be imported in this order.
 *
 * Exai defaults cannot be imported within
 * the `exai/exai` partial because its
 * values must be defined before importing
 * inuit.css. Such is the nature of building
 * a framework on top of a framework...
 */
/*------------------------------------*\
    VARS.SCSS
\*------------------------------------*/
/**
 *
 * ^^overrides Indicates var overriding exai.css or inuit.css
 *
 * Any variables you find set in exai.css' `_defaults.scss` or inuit.css’ `_vars.scss`
 * that you do not wish to keep, simply redefine here. This means that if inuit.css,
 * for example, sets your `$base-font-size` at 16px and you wish it to be 14px,
 * simply redeclare that variable in this file. exai.css and inuit.css ignore
 * their own variables in favour of using your own, so you can completely modify
 * how exai.css or inuit.css work without ever having to alter the frameworks themselves.
 */
/*------------------------------------*\
    $OBJECTS-AND-ABSTRACTIONS
\*------------------------------------*/
/**
 * All of inuit.css’ objects and abstractions are initially turned off by
 * default. This means that you start any project with as little as possible,
 * and introducing objects and abstractions is as simple as switching the
 * following variables to `true`.
 *
 * Some options are not listed as Exai depends on them.
 * See `exai/_defaults.scss` for details.
 *
 */
/*------------------------------------*\
    $CSSWIZARDRY-GRIDS
\*------------------------------------*/
/*------------------------------------*\
    $CUSTOM
\*------------------------------------*/
/**
 * Place any of your own variables that sit on top of exai.css and inuit.css here.
 */
/*------------------------------------*\
    $COLORS
\*------------------------------------*/
/**
 * Color scheme
 *
 * ^^overrides exai.css
 */
/**
 * Color palette.
 */
/**
 * Colors for Temple Update categories.
 */
/**
 * Default colour for objects’ borders etc.
 *
 * ^^overrides exai.css
 * ^^overrides inuit.css
 */
/*------------------------------------*\
    $TYPOGRAPHY
\*------------------------------------*/
/**
 * Font stacks.
 */
/**
 * Base stuff
 *
 * ^^overrides inuit.css
 */
/**
 * Base font-family.
 *
 * ^^overrides inuit.css
 */
/**
 * Font-sizes (in pixels).
 *
 * Use with font-size() mixin.
 *
 * ^^overrides inuit.css
 */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/*------------------------------------*\
    $GENERAL
\*------------------------------------*/
/*------------------------------------*\
    $HEADER
\*------------------------------------*/
/*------------------------------------*\
    $NAV-MAIN
\*------------------------------------*/
/*------------------------------------*\
    $PAGE-HOME
\*------------------------------------*/
/*------------------------------------*\
    $EXAI-DEFAULTS
\*------------------------------------*/
/**
 * exai.css’ default variables.
 *
 * These build upon inuit.css' variables and form
 * the backbone of exai. Override them in _vars.scss.
 */
/*------------------------------------*\
    $CUSTOM
\*------------------------------------*/
/**
 * Place any of your own variables that sit on top of inuit.css here.
 */
/*------------------------------------*\
    $OBJECTS-AND-ABSTRACTIONS
\*------------------------------------*/
/**
 * All of inuit.css’ objects and abstractions are initially turned off by
 * default. This means that you start any project with as little as possible,
 * and introducing objects and abstractions is as simple as switching the
 * following variables to `true`.
 *
 * Exai depends on some of these, so they are turned on here by default.
 */
/*------------------------------------*\
    $COLORS
\*------------------------------------*/
/**
 * Default colour for objects’ borders etc.
 *
 * ^^overrides inuit.css
 */
/*------------------------------------*\
    $TYPOGRAPHY
\*------------------------------------*/
/**
 * Font stacks.
 */
/**
 * Base stuff
 *
 * ^^overrides inuit.css
 */
/**
 * Base font-family.
 *
 * ^^overrides inuit.css
 */
/**
 * Font-sizes (in pixels).
 *
 * Use with font-size() mixin.
 *
 * ^^overrides inuit.css
 */
/**
 * Font Awesome path
 */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/**
 * How big would you like round corners to be by default?
 */
/*------------------------------------*\
    $GENERAL
\*------------------------------------*/
/*------------------------------------*\
    $HEADER
\*------------------------------------*/
/*------------------------------------*\
    $NAV-MAIN
\*------------------------------------*/
/*------------------------------------*\
    INUIT.CSS
\*------------------------------------*/
/*!*
 *
 * inuitcss.com -- @inuitcss -- @csswizardry
 *
 */
/**
 * inuit.css acts as a base stylesheet which you should extend with your own
 * theme stylesheet.
 *
 * inuit.css aims to do the heavy lifting; sorting objects and abstractions,
 * design patterns and fiddly bits of CSS, whilst leaving as much design as
 * possible to you. inuit.css is the scaffolding to your decorator.
 *
 * This stylesheet is heavily documented and contains lots of comments, please
 * take care to read and refer to them as you build. For further support please
 * tweet at @inuitcss.
 *
 * Owing to the amount of comments please only ever use minified CSS in
 * production. This file is purely a dev document.
 *
 * The table of contents below maps to section titles of the same name, to jump
 * to any section simply run a find for $[SECTION-TITLE].
 *
 * Most objects and abstractions come with a chunk of markup that you should be
 * able to paste into any view to quickly see how the CSS works in conjunction
 * with the correct HTML.
 *
 * inuit.css is written to this standard: github.com/csswizardry/CSS-Guidelines
 *
 * LICENSE
 *
 * Copyright 2013 Harry Roberts
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 *
 * Thank you for choosing inuit.css. May your web fonts render perfectly.
 */
/*------------------------------------*\
    $CONTENTS
\*------------------------------------*/
/**
 * CONTENTS............You’re reading it!
 * WARNING.............Here be dragons!
 * IMPORTS.............Begin importing the sections below
 *
 * MIXINS..............Super-simple Sass stuff
 * NORMALIZE...........normalize.css
 * RESET...............Set some defaults
 * CLEARFIX............
 * SHARED..............Shared declarations
 *
 * MAIN................High-level elements like `html`, `body`, etc.
 * HEADINGS............Double-stranded heading hierarchy
 * PARAGRAPHS..........
 * SMALLPRINT..........Smaller text elements like `small`
 * QUOTES..............
 * CODE................
 * LISTS...............
 * IMAGES..............
 * TABLES..............
 * FORMS...............
 *
 * GRIDS...............Fluid, proportional and nestable grids
 * FLEXBOX.............Crudely emulate flexbox
 * COLUMNS.............CSS3 columns
 * NAV.................A simple abstraction to put a list in horizontal nav mode
 * OPTIONS.............Grouped nav items
 * PAGINATION..........Very stripped back, basic paginator
 * BREADCRUMB..........Simple breadcrumb trail object
 * MEDIA...............Media object
 * MARGINALIA..........Simple marginalia content
 * ISLAND..............Boxed off content
 * BLOCK-LIST..........Blocky lists of content
 * MATRIX..............Gridded lists
 * SPLIT...............A simple split-in-two object
 * THIS-OR-THIS........Options object
 * LINK-COMPLEX........
 * FLYOUT..............Flyout-on-hover object
 * ARROWS..............CSS arrows
 * SPRITE..............Generic spriting element
 * ICON-TEXT...........Icon and text couplings
 * BEAUTONS............Use the beautons micro library
 * LOZENGES............Basic lozenge styles
 * RULES...............Horizontal rules
 * STATS...............Simple stats object
 * GREYBOX.............Wireframing styles
 *
 * WIDTHS..............Width classes for use alongside the grid system etc.
 * PUSH................Push classes for manipulating grids
 * PULL................Pull classes for manipulating grids
 * BRAND...............Helper class to apply brand treatment to elements
 * HELPER..............A series of helper classes to use arbitrarily
 * DEBUG...............Enable to add visual flags for debugging purposes
 */
/*------------------------------------*\
    $WARNING
\*------------------------------------*/
/*
 * inuit.css, being an OO framework, works in keeping with the open/closed
 * principle. The variables you set previously are now being used throughout
 * inuit.css to style everything we need for a base. Any custom styles SHOULD
 * NOT be added or modified in inuit.css directly, but added via your theme
 * stylesheet as per the open/closed principle:
 *
 * csswizardry.com/2012/06/the-open-closed-principle-applied-to-css
 *
 * Try not to edit any CSS beyond this point; if you find you need to do so
 * it is a failing of the framework so please tweet at @inuitcss.
 */
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/**
 * Generic utility styles etc.
 */
/*------------------------------------*\
    $DEFAULTS
\*------------------------------------*/
/**
 * inuit.css’ default variables. Redefine these in your `_vars.scss` file (found
 * in the inuit.css-web-template) to override them.
 */
/*------------------------------------*\
    $DEBUG
\*------------------------------------*/
/**
 * Debug mode will visually highlight any potential markup/accessibility quirks
 * in the browser. Set to `true` or `false`.
 */
/*------------------------------------*\
    $BORDER-BOX
\*------------------------------------*/
/**
 * Do you want all elements to adopt `box-sizing:border-box;` as per
 * paulirish.com/2012/box-sizing-border-box-ftw ?
 */
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/**
 * Base stuff
 */
/**
 * Base font-family. 
 */
/**
 * Default colour for objects’ borders etc.
 */
/*------------------------------------*\
    $RESPONSIVE
\*------------------------------------*/
/**
 * Responsiveness?
 */
/**
 * Responsiveness for widescreen/high resolution desktop monitors and beyond?
 * Note: `$responsive` variable above must be set to true before enabling this.
 */
/**
 * Responsive push and pull produce a LOT of code, only turn them on if you
 * definitely need them.
 */
/**
 * Note: `$push` variable above must be set to true before enabling these.
 */
/**
 * Note: `$pull` variable above must be set to true before enabling these.
 */
/**
 * Tell inuit.css when breakpoints start.
 */
/*------------------------------------*\
    $FONT-SIZES
\*------------------------------------*/
/**
 * Font-sizes (in pixels). Refer to relevant sections for their implementations.
 */
/*------------------------------------*\
    $QUOTES
\*------------------------------------*/
/**
 * English quote marks?
 */
/**
 * If you want English quotes then please do not edit these; they’re only here
 * because Sass needs them.
 */
/**
 * If you need non-English quotes, please alter the following values accordingly:
 */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/**
 * Brand stuff
 */
/**
 * How big would you like round corners to be by default?
 */
/*------------------------------------*\
    $OBJECTS AND ABSTRACTIONS
\*------------------------------------*/
/**
 * Which objects and abstractions would you like to use?
 */
/*------------------------------------*\
    $FRAMEWORK
\*------------------------------------*/
/**
 * inuit.css will work these next ones out for use within the framework.
 *
 * Assign our `$base-line-height` to a new spacing var for more transparency.
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * Create a fully formed type style (sizing and vertical rhythm) by passing in a
 * single value, e.g.:
 *
   `@include font-size(10px);`
 *
 * Thanks to @redclov3r for the `line-height` Sass:
 * twitter.com/redclov3r/status/250301539321798657
 */
/**
 * Style any number of headings in one fell swoop, e.g.:
 *
   .foo{
       @include headings(1, 3){
           color:#BADA55;
       }
    }
 *
 * With thanks to @lar_zzz, @paranoida and @rowanmanning for refining and
 * improving my initial mixin.
 */
/**
 * Create vendor-prefixed CSS in one go, e.g.
 *
   `@include vendor(border-radius, 4px);`
 *
 */
/**
 * Create CSS keyframe animations for all vendors in one go, e.g.:
 *
   .foo{
       @include vendor(animation, shrink 3s);
   }

   @include keyframe(shrink){
       from{
           font-size:5em;
       }
   }
 *
 * Courtesy of @integralist: twitter.com/integralist/status/260484115315437569
 */
/**
 * Force overly long spans of text to truncate, e.g.:
 *
   `@include truncate(100%);`
 *
 * Where `$truncation-boundary` is a united measurement.
 */
/**
 * CSS arrows!!! But... before you read on, you might want to grab a coffee...
 *
 * This mixin creates a CSS arrow on a given element. We can have the arrow
 * appear in one of 12 locations, thus:
 *
 *       01    02    03
 *    +------------------+
 * 12 |                  | 04
 *    |                  |
 * 11 |                  | 05
 *    |                  |
 * 10 |                  | 06
 *    +------------------+
 *       09    08    07
 *
 * You pass this position in along with a desired arrow color and optional
 * border color, for example:
 *
 * `@include arrow(top, left, red)`
 *
 * for just a single, red arrow, or:
 *
 * `@include arrow(bottom, center, red, black)`
 *
 * which will create a red triangle with a black border which sits at the bottom
 * center of the element. Call the mixin thus:
 *
   .foo{
       background-color:#BADA55;
       border:1px solid #ACE;
       @include arrow(top, left, #BADA55, #ACE);
   }
 *
 */
/**
 * Media query mixin.
 *
 * It’s not great practice to define solid breakpoints up-front, preferring to
 * modify your design when it needs it, rather than assuming you’ll want a
 * change at ‘mobile’. However, as inuit.css is required to take a hands off
 * approach to design decisions, this is the closest we can get to baked-in
 * responsiveness. It’s flexible enough to allow you to set your own breakpoints
 * but solid enough to be frameworkified.
 *
 * We define some broad breakpoints in our vars file that are picked up here
 * for use in a simple media query mixin. Our options are:
 *
 * palm
 * lap
 * lap-and-up
 * portable
 * desk
 * desk-wide
 *
 * Not using a media query will, naturally, serve styles to all devices.
 *
 * `@include media-query(palm){ [styles here] }`
 *
 * We work out your end points for you:
 */
/*! normalize.css v2.1.0 | MIT License | git.io/normalize */
/* ==========================================================================
   HTML5 display definitions
   ========================================================================== */
/*
 * Correct `block` display not defined in IE 8/9.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
nav,
section,
summary {
  display: block;
}

/*
 * Correct `inline-block` display not defined in IE 8/9.
 */
audio,
canvas,
video {
  display: inline-block;
}

/*
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0;
}

/*
 * Address styling not present in IE 8/9.
 */
[hidden] {
  display: none;
}

/* ==========================================================================
   Base
   ========================================================================== */
/*
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS text size adjust after orientation change, without disabling
 *    user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -webkit-text-size-adjust: 100%;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 2 */
}

/*
 * Remove default margin.
 */
body {
  margin: 0;
}

/* ==========================================================================
   Links
   ========================================================================== */
/*
 * Address `outline` inconsistency between Chrome and other browsers.
 */
a:focus {
  outline: thin dotted;
}

/*
 * Improve readability when focused and also mouse hovered in all browsers.
 */
a:active,
a:hover {
  outline: 0;
}

/* ==========================================================================
   Typography
   ========================================================================== */
/*
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari 5, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0;
}

/*
 * Address styling not present in IE 8/9, Safari 5, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted;
}

/*
 * Address style set to `bolder` in Firefox 4+, Safari 5, and Chrome.
 */
b,
strong {
  font-weight: bold;
}

/*
 * Address styling not present in Safari 5 and Chrome.
 */
dfn {
  font-style: italic;
}

/*
 * Address differences between Firefox and other browsers.
 */
hr {
  -moz-box-sizing: content-box;
  box-sizing: content-box;
  height: 0;
}

/*
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000;
}

/*
 * Correct font family set oddly in Safari 5 and Chrome.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, serif;
  font-size: 1em;
}

/*
 * Improve readability of pre-formatted text in all browsers.
 */
pre {
  white-space: pre-wrap;
}

/*
 * Set consistent quote types.
 */
q {
  quotes: "\201C" "\201D" "\2018" "\2019";
}

/*
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%;
}

/*
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

/* ==========================================================================
   Embedded content
   ========================================================================== */
/*
 * Remove border when inside `a` element in IE 8/9.
 */
img {
  border: 0;
}

/*
 * Correct overflow displayed oddly in IE 9.
 */
svg:not(:root) {
  overflow: hidden;
}

/* ==========================================================================
   Figures
   ========================================================================== */
/*
 * Address margin not present in IE 8/9 and Safari 5.
 */
figure {
  margin: 0;
}

/* ==========================================================================
   Forms
   ========================================================================== */
/*
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em;
}

/*
 * 1. Correct `color` not being inherited in IE 8/9.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
 * 1. Correct font family not being inherited in all browsers.
 * 2. Correct font size not being inherited in all browsers.
 * 3. Address margins set differently in Firefox 4+, Safari 5, and Chrome.
 */
button,
input,
select,
textarea {
  font-family: inherit;
  /* 1 */
  font-size: 100%;
  /* 2 */
  margin: 0;
  /* 3 */
}

/*
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
button,
input {
  line-height: normal;
}

/*
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Chrome, Safari 5+, and IE 8+.
 * Correct `select` style inheritance in Firefox 4+ and Opera.
 */
button,
select {
  text-transform: none;
}

/*
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */
}

/*
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default;
}

/*
 * 1. Address box sizing set to `content-box` in IE 8/9.
 * 2. Remove excess padding in IE 8/9.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */
}

/*
 * 1. Address `appearance` set to `searchfield` in Safari 5 and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari 5 and Chrome
 *    (include `-moz` to future-proof).
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  -moz-box-sizing: content-box;
  -webkit-box-sizing: content-box;
  /* 2 */
  box-sizing: content-box;
}

/*
 * Remove inner padding and search cancel button in Safari 5 and Chrome
 * on OS X.
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}

/*
 * 1. Remove default vertical scrollbar in IE 8/9.
 * 2. Improve readability and alignment in all browsers.
 */
textarea {
  overflow: auto;
  /* 1 */
  vertical-align: top;
  /* 2 */
}

/* ==========================================================================
   Tables
   ========================================================================== */
/*
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0;
}

/*------------------------------------*\
    $RESET
\*------------------------------------*/
/**
 * A more considered reset; more of a restart...
 * As per: csswizardry.com/2011/10/reset-restarted
 */
/**
* Let’s make the box model all nice, shall we...?
*/
*, *:before, *:after {
  -webkit-box-sizing: border-box;
  -moz-box-sizing: border-box;
  -ms-box-sizing: border-box;
  -o-box-sizing: border-box;
  box-sizing: border-box;
}

/**
 * The usual...
 */
h1, h2, h3, h4, h5, h6,
p, blockquote, pre,
dl, dd, ol, ul,
form, fieldset, legend,
table, th, td, caption,
hr {
  margin: 0;
  padding: 0;
}

/**
 * Give a help cursor to elements that give extra info on `:hover`.
 */
abbr[title], dfn[title] {
  cursor: help;
}

/**
 * Remove underlines from potentially troublesome elements.
 */
u, ins {
  text-decoration: none;
}

/**
 * Apply faux underline via `border-bottom`.
 */
ins {
  border-bottom: 1px solid;
}

/**
 * So that `alt` text is visually offset if images don’t load.
 */
img {
  font-style: italic;
}

/**
 * Give form elements some cursor interactions...
 */
label,
input,
textarea,
button,
select,
option {
  cursor: pointer;
}

.text-input:active,
.text-input:focus,
textarea:active,
textarea:focus {
  cursor: text;
  outline: none;
}

/*------------------------------------*\
    $CLEARFIX
\*------------------------------------*/
/**
 * Micro clearfix, as per: css-101.org/articles/clearfix/latest-new-clearfix-so-far.php
 * Extend the clearfix class with Sass to avoid the `.cf` class appearing over
 * and over in your markup.
 */
.cf:after, .nav:after, .media:after, .matrix:after, .multi-list:after, .pane:after, .comment:after, .main-nav:after, .dropdown:after,
.dropdown--submenu:after, .dropdown__menu:after, .navbar:after, .branding:after, .slides:after {
  content: "";
  display: table;
  clear: both;
}

/*------------------------------------*\
    $SHARED
\*------------------------------------*/
/**
 * Where `margin-bottom` is concerned, this value will be the same as the
 * base line-height. This allows us to keep a consistent vertical rhythm.
 * As per: csswizardry.com/2012/06/single-direction-margin-declarations
 */
/**
 * Base elements
 */
h1, h2, h3, h4, h5, h6, hgroup,
ul, ol, dl,
blockquote, p, address,
table,
fieldset, figure,
pre,
.form-fields > li,
.media,
.island,
.islet {
  margin-bottom: 24px;
  margin-bottom: 1.5rem;
}
.islet h1, .islet h2, .islet h3, .islet h4, .islet h5, .islet h6, .islet hgroup, .islet
ul, .islet ol, .islet dl, .islet
blockquote, .islet p, .islet address, .islet
table, .islet
fieldset, .islet figure, .islet
pre, .islet .form-fields > li, .islet
.media, .islet
.island, .islet
.islet {
  margin-bottom: 12px;
  margin-bottom: 0.75rem;
}

/**
 * Doubled up `margin-bottom` helper class.
 */
.landmark {
  margin-bottom: 48px;
  margin-bottom: 3rem;
}

/**
 * `hr` elements only take up a few pixels, so we need to give them special
 * treatment regarding vertical rhythm.
 */
hr {
  margin-bottom: 22px;
  margin-bottom: 1.375rem;
}

/**
 * Where `margin-left` is concerned we want to try and indent certain elements
 * by a consistent amount. Define that amount once, here.
 */
ul, ol, dd {
  margin-left: 48px;
  margin-left: 3rem;
}

/**
 * Base styles; unclassed HTML elements etc.
 */
/*------------------------------------*\
    $MAIN
\*------------------------------------*/
html {
  font: 1em/1.5 "proxima-nova", Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT", "Myriad Pro", Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue", Helvetica, Arial, sans-serif;
  overflow-y: scroll;
  min-height: 100%;
}

/*------------------------------------*\
    $HEADINGS
\*------------------------------------*/
/**
 * As per: csswizardry.com/2012/02/pragmatic-practical-font-sizing-in-css
 *
 * When we define a heading we also define a corresponding class to go with it.
 * This allows us to apply, say, `class=alpha` to a `h3`; a double-stranded
 * heading hierarchy.
 */
h1, .alpha {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.33333;
}

h2, .beta {
  font-size: 30px;
  font-size: 1.875rem;
  line-height: 1.6;
}

h3, .gamma {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1;
}

h4, .delta {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2;
}

h5, .epsilon {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
}

h6, .zeta {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429;
}

/**
 * Heading groups and generic any-heading class.
 * To target any heading of any level simply apply a class of `.hN`, e.g.:
 *
   <hgroup>
       <h1 class=hN>inuit.css</h1>
       <h2 class=hN>Best. Framework. Ever!</h2>
   </hgroup>
 *
 */
hgroup .hN {
  margin-bottom: 0;
}

/**
 * A series of classes for setting massive type; for use in heroes, mastheads,
 * promos, etc.
 */
.giga {
  font-size: 96px;
  font-size: 6rem;
  line-height: 1;
}

.mega {
  font-size: 72px;
  font-size: 4.5rem;
  line-height: 1;
}

.kilo {
  font-size: 48px;
  font-size: 3rem;
  line-height: 1;
}

/*------------------------------------*\
    $PARAGRAPHS
\*------------------------------------*/
/**
 * The `.lede` class is used to make the introductory text (usually a paragraph)
 * of a document slightly larger.
 */
.lede,
.lead {
  font-size: 18px;
  font-size: 1.125rem;
  line-height: 1.33333;
}

/*------------------------------------*\
    $SMALLPRINT
\*------------------------------------*/
/**
 * A series of classes for setting tiny type; for use in smallprint etc.
 */
.smallprint,
.milli {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
}

.micro {
  font-size: 10px;
  font-size: 0.625rem;
  line-height: 2.4;
}

/*------------------------------------*\
    $QUOTES
\*------------------------------------*/
/**
 * If English quotes are set in `_vars.scss`, define them here.
 */
/**
 * Big up @boblet: html5doctor.com/blockquote-q-cite
 */
/**
 * Inline quotes.
 */
q {
  quotes: "‘" "’" "“" "”";
}
q:before {
  content: "‘";
  content: open-quote;
}
q:after {
  content: "’";
  content: close-quote;
}
q q:before {
  content: "“";
  content: open-quote;
}
q q:after {
  content: "”";
  content: close-quote;
}

blockquote {
  quotes: "“" "”";
}
blockquote p:before {
  content: "“";
  content: open-quote;
}
blockquote p:after {
  content: "";
  content: no-close-quote;
}
blockquote p:last-of-type:after {
  content: "”";
  content: close-quote;
}
blockquote q:before {
  content: "‘";
  content: open-quote;
}
blockquote q:after {
  content: "’";
  content: close-quote;
}

/**
 *
   <blockquote>
       <p>Insanity: doing the same thing over and over again and expecting
       different results.</p>
       <b class=source>Albert Einstein</b>
   </blockquote>
 *
 */
blockquote {
  /**
   * .4em is roughly equal to the width of the opening “ that we wish to hang.
   */
  text-indent: -0.41em;
}
blockquote p:last-of-type {
  margin-bottom: 0;
}

.source {
  display: block;
  text-indent: 0;
}
.source:before {
  content: "—";
}

/*------------------------------------*\
    $CODE
\*------------------------------------*/
/**
 * Use an explicit font stack to ensure browsers render correct `line-height`.
 */
pre {
  overflow: auto;
}

pre mark {
  background: none;
  border-bottom: 1px solid;
  color: inherit;
}

/**
 * Add comments to your code examples, e.g.:
 *
   <code>&lt;/div&gt;<span class=code-comment>&lt;!-- /wrapper --&gt;</span></code>
 *
 */
.code-comment {
  /**
   * Override this setting in your theme stylesheet
   */
  opacity: 0.75;
  filter: alpha(opacity=75);
}

/**
 * You can add line numbers to your code examples but be warned, it requires
 * some pretty funky looking markup, e.g.:
 *
   <ol class=line-numbers>
       <li><code>.nav{</code></li>
       <li><code>    list-style:none;</code></li>
       <li><code>    margin-left:0;</code></li>
       <li><code>}</code></li>
       <li><code>    .nav > li,</code></li>
       <li><code>        .nav > li > a{</code></li>
       <li><code>            display:inline-block;</code></li>
       <li><code>           *display:inline-block;</code></li>
       <li><code>            zoom:1;</code></li>
       <li><code>        }</code></li>
   </ol>
 *
 * 1. Make the list look like code.
 * 2. Give the list flush numbers with a leading zero.
 * 3. Make sure lines of code don’t wrap.
 * 4. Give the code form by forcing the `code` to honour white-space.
 */
.line-numbers {
  font-family: monospace, serif;
  /* [1] */
  list-style: decimal-leading-zero inside;
  /* [2] */
  white-space: nowrap;
  /* [3] */
  overflow: auto;
  /* [3] */
  margin-left: 0;
}

.line-numbers code {
  white-space: pre;
  /* [4] */
}

/*------------------------------------*\
    $IMAGES
\*------------------------------------*/
/**
 * Demo: jsfiddle.net/inuitcss/yMtur
 */
/**
 * Fluid images.
 */
img {
  max-width: 100%;
}

/**
 * Non-fluid images if you specify `width` and/or `height` attributes.
 */
img[width],
img[height] {
  max-width: none;
}

/**
 * Rounded images.
 */
.img--round {
  border-radius: 0;
}

/**
 * Image placement variations.
 */
.img--right, .alignright {
  float: right;
  margin-bottom: 24px;
  margin-left: 24px;
}

.img--left, .alignleft {
  float: left;
  margin-right: 24px;
  margin-bottom: 24px;
}

.img--center, .aligncenter {
  display: block;
  margin-right: auto;
  margin-bottom: 24px;
  margin-left: auto;
}

/**
 * Keep your images on your baseline.
 *
 * Please note, these will not work too nicely with fluid images and will
 * distort when resized below a certain width. Use with caution.
 */
.img--short {
  height: 120px;
}

.img--medium {
  height: 240px;
}

.img--tall {
  height: 360px;
}

/**
 * Images in `figure` elements.
 */
figure > img {
  display: block;
}

/*------------------------------------*\
    $LISTS
\*------------------------------------*/
/**
 * Remove vertical spacing from nested lists.
 */
li > ul,
li > ol {
  margin-bottom: 0;
}

/**
 * Have a numbered `ul` without the semantics implied by using an `ol`.
 */
/*ul*/
.numbered-list {
  list-style-type: decimal;
}

/*------------------------------------*\
    $TABLES
\*------------------------------------*/
/**
 * We have a lot at our disposal for making very complex table constructs, e.g.:
 *
   <table class="table--bordered  table--striped  table--data">
       <colgroup>
           <col class=t10>
           <col class=t10>
           <col class=t10>
           <col>
       </colgroup>
       <thead>
           <tr>
               <th colspan=3>Foo</th>
               <th>Bar</th>
           </tr>
           <tr>
               <th>Lorem</th>
               <th>Ipsum</th>
               <th class=numerical>Dolor</th>
               <th>Sit</th>
           </tr>
       </thead>
       <tbody>
           <tr>
               <th rowspan=3>Sit</th>
               <td>Dolor</td>
               <td class=numerical>03.788</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <td>Dolor</td>
               <td class=numerical>32.210</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <td>Dolor</td>
               <td class=numerical>47.797</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <th rowspan=2>Sit</th>
               <td>Dolor</td>
               <td class=numerical>09.640</td>
               <td>Lorem</td>
           </tr>
           <tr>
               <td>Dolor</td>
               <td class=numerical>12.117</td>
               <td>Lorem</td>
           </tr>
       </tbody>
   </table>
 *
 */
table {
  width: 100%;
}

th,
td {
  padding: 6px;
  text-align: left;
}
@media screen and (min-width: 480px) {
  th,
  td {
    padding: 12px;
  }
}

/**
 * Cell alignments
 */
[colspan] {
  text-align: center;
}

[colspan="1"] {
  text-align: left;
}

[rowspan] {
  vertical-align: middle;
}

[rowspan="1"] {
  vertical-align: top;
}

.numerical {
  text-align: right;
}

/**
 * In the HTML above we see several `col` elements with classes whose numbers
 * represent a percentage width for that column. We leave one column free of a
 * class so that column can soak up the effects of any accidental breakage in
 * the table.
 */
.t5 {
  width: 5%;
}

.t10 {
  width: 10%;
}

.t12 {
  width: 12.5%;
}

/* 1/8 */
.t15 {
  width: 15%;
}

.t20 {
  width: 20%;
}

.t25 {
  width: 25%;
}

/* 1/4 */
.t30 {
  width: 30%;
}

.t33 {
  width: 33.333%;
}

/* 1/3 */
.t35 {
  width: 35%;
}

.t37 {
  width: 37.5%;
}

/* 3/8 */
.t40 {
  width: 40%;
}

.t45 {
  width: 45%;
}

.t50 {
  width: 50%;
}

/* 1/2 */
.t55 {
  width: 55%;
}

.t60 {
  width: 60%;
}

.t62 {
  width: 62.5%;
}

/* 5/8 */
.t65 {
  width: 65%;
}

.t66 {
  width: 66.666%;
}

/* 2/3 */
.t70 {
  width: 70%;
}

.t75 {
  width: 75%;
}

/* 3/4*/
.t80 {
  width: 80%;
}

.t85 {
  width: 85%;
}

.t87 {
  width: 87.5%;
}

/* 7/8 */
.t90 {
  width: 90%;
}

.t95 {
  width: 95%;
}

/**
 * Bordered tables
 */
.table--bordered th,
.table--bordered td {
  border: 1px solid #9e1b34;
}
.table--bordered th:empty,
.table--bordered td:empty {
  border: none;
}
.table--bordered thead tr:last-child th {
  border-bottom-width: 2px;
}
.table--bordered tbody tr th:last-of-type {
  border-right-width: 2px;
}

/**
 * Striped tables
 */
.table--striped tbody tr:nth-of-type(odd) {
  background-color: #ffc;
  /* Override this color in your theme stylesheet */
}

/**
 * Data table
 */
.table--data {
  font: 12px/1.5 sans-serif;
}

/*------------------------------------*\
    $FORMS
\*------------------------------------*/
/**
 *
 * Demo: jsfiddle.net/inuitcss/MhHHU
 *
 */
fieldset {
  padding: 24px;
}

/**
 * Text inputs
 *
 * Instead of a `[type]` selector for each kind of form input, we just use a
 * class to target any/every one, e.g.:
   <input type=text class=text-input>
   <input type=email class=text-input>
   <input type=password class=text-input>
 *
 */
.text-input,
textarea {
  /**
   * Style these via your theme stylesheet.
   */
}

/**
 * Group sets of form fields in a list, e.g.:
 *
   <ul class=form-fields>
       <li>
           <label />
           <input />
       </li>
       <li>
           <label />
           <select />
       </li>
       <li>
           <label />
           <input />
       </li>
   </ul>
 *
 */
.form-fields {
  list-style: none;
  margin: 0;
}

.form-fields > li:last-child {
  margin-bottom: 0;
}

/**
 * Labels
 *
 * Define a `.label` class as well as a `label` element. This means we can apply
 * label-like styling to meta-labels for groups of options where a `label`
 * element is not suitable, e.g.:
 *
   <li>
       <span class=label>Select an option below:</span>
       <ul class="multi-list  four-cols">
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
       </ul>
   </li>
 *
 */
label,
.label {
  display: block;
}

/**
 * Extra help text in `label`s, e.g.:
 *
   <label>Card number <small class=additional>No spaces</small></label>
 *
 */
.additional {
  display: block;
  font-weight: normal;
}

/*
 * Groups of checkboxes and radios, e.g.:
 *
   <li>
       <ul class=check-list>
           <li>
               <input /> <label />
           </li>
           <li>
               <input /> <label />
           </li>
       </ul>
   </li>
 *
 */
.check-list {
  list-style: none;
  margin: 0;
}

/*
 * Labels in check-lists
 */
.check-label,
.check-list label,
.check-list .label {
  display: inline-block;
}

/**
 * Spoken forms are for forms that read like spoken word, e.g.:
 *
   <li class=spoken-form>
       Hello, my <label for=spoken-name>name</label> is
       <input type=text class=text-input id=spoken-name>. My home
       <label for=country>country</label> is
       <select id=country>
           <option>UK</option>
           <option>US</option>
           <option>Other</option>
       </select>
   </li>
 *
 */
.spoken-form label {
  display: inline-block;
  font: inherit;
}

/**
 * Extra help text displayed after a field when that field is in focus, e.g.:
 *
   <label for=email>Email:</label>
   <input type=email class=text-input id=email>
   <small class=extra-help>.edu emails only</small>
 *
 * We leave the help text in the document flow and merely set it to
 * `visibility:hidden;`. This means that it won’t interfere with anything once
 * it reappears.
 *
 */
/*small*/
.extra-help {
  display: inline-block;
  visibility: hidden;
}

.text-input:active + .extra-help,
.text-input:focus + .extra-help {
  visibility: visible;
}

/**
 * Objects and abstractions
 */
/*------------------------------------*\
    $NAV
\*------------------------------------*/
/**
 * Nav abstraction as per: csswizardry.com/2011/09/the-nav-abstraction
 * When used on an `ol` or `ul`, this class throws the list into horizontal mode
 * e.g.:
 *
   <ul class=nav>
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 * Demo: jsfiddle.net/inuitcss/Vnph4
 *
 */
.nav {
  list-style: none;
  margin-left: 0;
}
.nav > li,
.nav > li > a {
  display: inline-block;
  *display: inline;
  zoom: 1;
}

/**
 * `.nav--stacked` extends `.nav` and throws the list into vertical mode, e.g.:
 *
   <ul class="nav  nav--stacked">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
.nav--stacked > li, .main-nav .level-1 > li {
  display: list-item;
}
.nav--stacked > li > a, .main-nav .level-1 > li > a {
  display: block;
}

/**
 * `.nav--banner` extends `.nav` and centres the list, e.g.:
 *
   <ul class="nav  nav--banner">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
.nav--banner {
  text-align: center;
}

/**
 * Give nav links a big, blocky hit area. Extends `.nav`, e.g.:
 *
   <ul class="nav  nav--block">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 */
.nav--block {
  line-height: 1;
  /**
   * Remove whitespace caused by `inline-block`.
   */
  letter-spacing: -0.31em;
  word-spacing: -0.43em;
  white-space: nowrap;
}
.nav--block > li {
  letter-spacing: normal;
  word-spacing: normal;
}
.nav--block > li > a {
  padding: 12px;
}

/**
 * Force a nav to occupy 100% of the available width of its parent. Extends
 * `.nav`, e.g.:
 *
   <ul class="nav  nav--fit">
       <li><a href=#>Home</a></li>
       <li><a href=#>About</a></li>
       <li><a href=#>Portfolio</a></li>
       <li><a href=#>Contact</a></li>
   </ul>
 *
 * Thanks to @pimpl for this idea!
 */
.nav--fit {
  display: table;
  width: 100%;
}
.nav--fit > li {
  display: table-cell;
}
.nav--fit > li > a {
  display: block;
}

/**
 * Make a list of keywords. Extends `.nav`, e.g.:
 *
   `<ul class="nav  nav--keywords>`
 *
 */
.nav--keywords > li:after {
  content: ", ";
}
.nav--keywords > li:last-child:after {
  display: none;
}

/*------------------------------------*\
    $PAGINATION
\*------------------------------------*/
/**
 * Basic pagination object, extends `.nav`.
 * Requires some funky commenting to collapse any white-space caused by the
 * `display:inline-block;` rules.
 *
   <ol class="nav  pagination">
       <li class=pagination__first>First</li>
       <li class=pagination__prev>Previous</li>
       <li><a href=/page/1>1</a></li>
       <li><a href=/page/2>2</a></li>
       <li class=current><a href=/page/3>3</a></li>
       <li><a href=/page/4>4</a></li>
       <li><a href=/page/5>5</a></li>
       <li class=pagination__next><a href=/page/next>Next</a></li>
       <li class=pagination__last><a href=/page/last>Last</a></li>
   </ol>
 *
 * Demo: jsfiddle.net/inuitcss/9Y6PU
 *
 */
.pagination {
  text-align: center;
  /**
   * Remove whitespace caused by `inline-block`.
   */
  letter-spacing: -0.31em;
  word-spacing: -0.43em;
}

.pagination > li {
  padding: 12px;
  letter-spacing: normal;
  word-spacing: normal;
}

.pagination > li > a {
  padding: 12px;
  margin: -12px;
}

.pagination__first a:before {
  content: "« ";
}

.pagination__last a:after {
  content: " »";
}

/*------------------------------------*\
    $MEDIA
\*------------------------------------*/
/**
 * Place any image- and text-like content side-by-side, as per:
 * stubbornella.org/content/2010/06/25/the-media-object-saves-hundreds-of-lines-of-code
 * E.g.:
 *
   <div class=media>
       <img src=http://placekitten.com/200/300 alt="" class=media__img>
       <p class=media__body>Lorem ipsum dolor sit amet, consectetur adipisicing elit,
       sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>
   </div>
 *
 * Demo: jsfiddle.net/inuitcss/cf4Qs
 *
 */
.media {
  display: block;
}

.media__img {
  float: left;
  margin-right: 24px;
}

/**
 * Reversed image location (right instead of left).
 */
.media__img--rev {
  float: right;
  margin-left: 24px;
}

.media__img img,
.media__img--rev img {
  display: block;
}

.media__body {
  overflow: hidden;
}

.media__body,
.media__body > :last-child {
  margin-bottom: 0;
}

/**
 * `.img`s in `.islet`s need an appropriately sized margin.
 */
.islet .media__img {
  margin-right: 12px;
}

.islet .media__img--rev {
  margin-left: 12px;
}

/*------------------------------------*\
    $BLOCK-LIST
\*------------------------------------*/
/**
 * Create big blocky lists of content, e.g.:
 *
   <ul class=block-list>
      <li>Foo</li>
      <li>Bar</li>
      <li>Baz</li>
      <li><a href=# class=block-list__link>Foo Bar Baz</a></li>
   </ul>
 *
 * Extend this object in your theme stylesheet.
 *
 * Demo: jsfiddle.net/inuitcss/hR57q
 *
 */
.block-list, .matrix,
.block-list > li,
.matrix > li {
  border: 0 solid #9e1b34;
}

.block-list, .matrix {
  list-style: none;
  margin-left: 0;
  border-top-width: 1px;
}
.block-list > li, .matrix > li {
  border-bottom-width: 1px;
  padding: 12px;
}

.block-list__link, .matrix__link {
  display: block;
  padding: 12px;
  margin: -12px;
}

/*------------------------------------*\
    $MATRIX
\*------------------------------------*/
/**
 * Create a grid of items out of a single list, e.g.:
 *
   <ul class="matrix  three-cols">
       <li class=all-cols>Lorem</li>
       <li>Ipsum <a href=#>dolor</a></li>
       <li><a href=# class=matrix__link>Sit</a></li>
       <li>Amet</li>
       <li class=all-cols>Consectetuer</li>
   </ul>
 *
 * Extend this object in your theme stylesheet.
 *
 * Demo: jsfiddle.net/inuitcss/Y2zrU
 *
 */
.matrix {
  border-left-width: 1px;
}
.matrix > li {
  float: left;
  border-right-width: 1px;
}

/**
 * The `.multi-list` object is a lot like the `.matrix` object only without the
 * blocky borders and padding.
 *
   <ul class="multi-list  four-cols">
       <li>Lorem</li>
       <li>Ipsum</li>
       <li>Dolor</li>
       <li>Sit</li>
   </ul>
 *
 * Demo: jsfiddle.net/inuitcss/Y2zrU
 *
 */
.multi-list {
  list-style: none;
  margin-left: 0;
}

.multi-list > li {
  float: left;
}

/**
 * Apply these classes alongside the `.matrix` or `.multi-list` classes on
 * lists to determine how wide their columns are.
 */
.two-cols > li {
  width: 50%;
}

.three-cols > li {
  width: 33.333%;
}

.four-cols > li {
  width: 25%;
}

.five-cols > li {
  width: 20%;
}

/**
 * Unfortunately we have to qualify this selector in order to bring its
 * specificity above the `.[number]-cols > li` selectors above.
 */
.matrix > .all-cols,
.multi-list > .all-cols {
  width: 100%;
}

/*------------------------------------*\
    $ICON-TEXT
\*------------------------------------*/
/**
 * For text-links etc that have an icon with them. Sometimes whitespace would
 * suffice in creating a gap between the icon and text, for example:
 *
   <a href=#>
       <i class="s  s--help"></i> Help &amp; support
   </a>
 *
 * However we will sometimes want a larger, explicity set gap:
   <a href=# class=icon-text>
       <i class="icon-text__icon  s  s--help"></i>Help &amp; support
   </a>
 *
 * Demo: jsfiddle.net/inuitcss/Q6Lbf
 *
 */
.icon-text > .icon-text__icon {
  margin-right: 6px;
}

/**
 * We can also reverse the direction of the margin for icons that appear to the
 * right of the text content, thus:
 *
   <a href=# class=icon-text--rev>
       Help &amp; support<i class="icon-text__icon  s  s--help"></i>
   </a>
 *
 */
.icon-text--rev > .icon-text__icon {
  margin-left: 6px;
}

/*------------------------------------*\
    $BEAUTONS.CSS
\*------------------------------------*/
/**
 * beautons is a beautifully simple button toolkit.
 *
 * LICENSE
 * 
 * Copyright 2013 Harry Roberts
 * 
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * 
 * http://apache.org/licenses/LICENSE-2.0
 * 
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * 
 */
/*!*
 * 
 * @csswizardry -- csswizardry.com/beautons
 * 
 */
/*------------------------------------*\
    $BASE
\*------------------------------------*/
/**
 * Base button styles.
 *
 * 1. Allow us to better style box model properties.
 * 2. Line different sized buttons up a little nicer.
 * 3. Stop buttons wrapping and looking broken.
 * 4. Make buttons inherit font styles.
 * 5. Force all elements using beautons to appear clickable.
 * 6. Normalise box model styles.
 * 7. If the button’s text is 1em, and the button is (3 * font-size) tall, then
 *    there is 1em of space above and below that text. We therefore apply 1em
 *    of space to the left and right, as padding, to keep consistent spacing.
 * 8. Basic cosmetics for default buttons. Change or override at will.
 * 9. Don’t allow buttons to have underlines; it kinda ruins the illusion.
 */
.btn {
  display: inline-block;
  /* [1] */
  vertical-align: middle;
  /* [2] */
  white-space: nowrap;
  /* [3] */
  font-family: inherit;
  /* [4] */
  font-size: 100%;
  /* [4] */
  cursor: pointer;
  /* [5] */
  border: none;
  /* [6] */
  margin: 0;
  /* [6] */
  padding-top: 0;
  /* [6] */
  padding-bottom: 0;
  /* [6] */
  line-height: 3;
  /* [7] */
  padding-right: 1em;
  /* [7] */
  padding-left: 1em;
  /* [7] */
  border-radius: 0;
  /* [8] */
}

.btn, .btn:hover {
  text-decoration: none;
  /* [9] */
}
.btn:active, .btn:focus {
  outline: none;
}

/*------------------------------------*\
    $SIZES
\*------------------------------------*/
/**
 * Button size modifiers.
 *
 * These all follow the same sizing rules as above; text is 1em, space around it
 * remains uniform.
 */
.btn--small {
  padding-right: 0.5em;
  padding-left: 0.5em;
  line-height: 2;
}

.btn--large {
  padding-right: 1.5em;
  padding-left: 1.5em;
  line-height: 4;
}

.btn--huge {
  padding-right: 2em;
  padding-left: 2em;
  line-height: 5;
}

/**
 * These buttons will fill the entirety of their container.
 *
 * 1. Remove padding so that widths and paddings don’t conflict.
 */
.btn--full {
  width: 100%;
  padding-right: 0;
  /* [1] */
  padding-left: 0;
  /* [1] */
  text-align: center;
}

/*------------------------------------*\
    $FONT-SIZES
\*------------------------------------*/
/**
 * Button font-size modifiers.
 */
.btn--alpha {
  font-size: 3rem;
}

.btn--beta {
  font-size: 2rem;
}

.btn--gamma {
  font-size: 1rem;
}

/**
 * Make the button inherit sizing from its parent.
 */
.btn--natural {
  vertical-align: baseline;
  font-size: inherit;
  line-height: inherit;
  padding-right: 0.5em;
  padding-left: 0.5em;
}

/*------------------------------------*\
    $FUNCTIONS
\*------------------------------------*/
/**
 * Button function modifiers.
 */
/**
 * Positive actions; e.g. sign in, purchase, submit, etc.
 */
.btn--positive {
  background-color: #4A993E;
  color: #fff;
}

/**
 * Negative actions; e.g. close account, delete photo, remove friend, etc.
 */
.btn--negative {
  background-color: #b33630;
  color: #fff;
}

/**
 * Inactive, disabled buttons.
 * 
 * 1. Make the button look like normal text when hovered.
 */
.btn--inactive,
.btn--inactive:hover,
.btn--inactive:active,
.btn--inactive:focus {
  background-color: #ddd;
  color: #777;
  cursor: text;
  /* [1] */
}

/*------------------------------------*\
    $STYLES
\*------------------------------------*/
/**
 * Button style modifiers.
 *
 * 1. Use an overly-large number to ensure completely rounded, pill-like ends.
 */
.btn--soft {
  border-radius: 200px;
  /* [1] */
}

.btn--hard {
  border-radius: 0;
}

/**
 * Style trumps; helper and brand classes
 */
/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Sizes in human readable format. These are used in conjunction with other
 * objects and abstractions found in inuit.css, most commonly the grid system
 * and faux flexbox.
 *
 * We have a mixin to generate our widths and their breakpoint-specific
 * variations.
 */
/**
* Whole
*/
.one-whole {
  width: 100%;
}

/**
* Halves
*/
.one-half, .two-quarters, .three-sixths, .four-eighths, .five-tenths, .six-twelfths {
  width: 50%;
}

/**
* Thirds
*/
.one-third, .two-sixths, .four-twelfths {
  width: 33.333%;
}

.two-thirds, .four-sixths, .eight-twelfths {
  width: 66.666%;
}

/**
* Quarters
*/
.one-quarter, .two-eighths, .three-twelfths {
  width: 25%;
}

.three-quarters, .six-eighths, .nine-twelfths {
  width: 75%;
}

/**
* Fifths
*/
.one-fifth, .two-tenths {
  width: 20%;
}

.two-fifths, .four-tenths {
  width: 40%;
}

.three-fifths, .six-tenths {
  width: 60%;
}

.four-fifths, .eight-tenths {
  width: 80%;
}

/**
* Sixths
*/
.one-sixth, .two-twelfths, .six-cols > li {
  width: 16.666%;
}

.five-sixths, .ten-twelfths {
  width: 83.333%;
}

/**
* Eighths
*/
.one-eighth, .eight-cols > li {
  width: 12.5%;
}

.three-eighths {
  width: 37.5%;
}

.five-eighths {
  width: 62.5%;
}

.seven-eighths {
  width: 87.5%;
}

/**
* Tenths
*/
.one-tenth {
  width: 10%;
}

.three-tenths {
  width: 30%;
}

.seven-tenths {
  width: 70%;
}

.nine-tenths {
  width: 90%;
}

/**
* Twelfths
*/
.one-twelfth {
  width: 8.333%;
}

.five-twelfths {
  width: 41.666%;
}

.seven-twelfths {
  width: 58.333%;
}

.eleven-twelfths {
  width: 91.666%;
}

/**
 * If you have set `$responsive` to ‘true’ in `_vars.scss` then you now have
 * access to these classes. You can define at which breakpoint you’d like an
 * element to be a certain size, e.g.:
 *
 * `<div class="g  one-quarter  lap-one-half  palm-one-whole"> ... </div>`
 *
 * This would create a `div` that, at ‘desktop’ sizes, takes up a quarter of the
 * horizontal space, a half of that space at ‘tablet’ sizes, and goes full width
 * at ‘mobile’ sizes.
 *
 * Demo: jsfiddle.net/inuitcss/WS4Ge
 *
 */
@media only screen and (max-width: 480px) {
  /**
  * Whole
  */
  .palm-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  .palm-one-half, .palm-two-quarters, .palm-three-sixths, .palm-four-eighths, .palm-five-tenths, .palm-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  .palm-one-third, .palm-two-sixths, .palm-four-twelfths {
    width: 33.333%;
  }

  .palm-two-thirds, .palm-four-sixths, .palm-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  .palm-one-quarter, .palm-two-eighths, .palm-three-twelfths {
    width: 25%;
  }

  .palm-three-quarters, .palm-six-eighths, .palm-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  .palm-one-fifth, .palm-two-tenths {
    width: 20%;
  }

  .palm-two-fifths, .palm-four-tenths {
    width: 40%;
  }

  .palm-three-fifths, .palm-six-tenths {
    width: 60%;
  }

  .palm-four-fifths, .palm-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  .palm-one-sixth, .palm-two-twelfths {
    width: 16.666%;
  }

  .palm-five-sixths, .palm-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  .palm-one-eighth {
    width: 12.5%;
  }

  .palm-three-eighths {
    width: 37.5%;
  }

  .palm-five-eighths {
    width: 62.5%;
  }

  .palm-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  .palm-one-tenth {
    width: 10%;
  }

  .palm-three-tenths {
    width: 30%;
  }

  .palm-seven-tenths {
    width: 70%;
  }

  .palm-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  .palm-one-twelfth {
    width: 8.333%;
  }

  .palm-five-twelfths {
    width: 41.666%;
  }

  .palm-seven-twelfths {
    width: 58.333%;
  }

  .palm-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
  * Whole
  */
  .lap-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  .lap-one-half, .lap-two-quarters, .lap-three-sixths, .lap-four-eighths, .lap-five-tenths, .lap-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  .lap-one-third, .lap-two-sixths, .lap-four-twelfths {
    width: 33.333%;
  }

  .lap-two-thirds, .lap-four-sixths, .lap-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  .lap-one-quarter, .lap-two-eighths, .lap-three-twelfths {
    width: 25%;
  }

  .lap-three-quarters, .lap-six-eighths, .lap-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  .lap-one-fifth, .lap-two-tenths {
    width: 20%;
  }

  .lap-two-fifths, .lap-four-tenths {
    width: 40%;
  }

  .lap-three-fifths, .lap-six-tenths {
    width: 60%;
  }

  .lap-four-fifths, .lap-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  .lap-one-sixth, .lap-two-twelfths {
    width: 16.666%;
  }

  .lap-five-sixths, .lap-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  .lap-one-eighth {
    width: 12.5%;
  }

  .lap-three-eighths {
    width: 37.5%;
  }

  .lap-five-eighths {
    width: 62.5%;
  }

  .lap-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  .lap-one-tenth {
    width: 10%;
  }

  .lap-three-tenths {
    width: 30%;
  }

  .lap-seven-tenths {
    width: 70%;
  }

  .lap-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  .lap-one-twelfth {
    width: 8.333%;
  }

  .lap-five-twelfths {
    width: 41.666%;
  }

  .lap-seven-twelfths {
    width: 58.333%;
  }

  .lap-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (min-width: 481px) {
  /**
  * Whole
  */
  .lap-and-up-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  .lap-and-up-one-half, .lap-and-up-two-quarters, .lap-and-up-three-sixths, .lap-and-up-four-eighths, .lap-and-up-five-tenths, .lap-and-up-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  .lap-and-up-one-third, .lap-and-up-two-sixths, .lap-and-up-four-twelfths {
    width: 33.333%;
  }

  .lap-and-up-two-thirds, .lap-and-up-four-sixths, .lap-and-up-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  .lap-and-up-one-quarter, .lap-and-up-two-eighths, .lap-and-up-three-twelfths {
    width: 25%;
  }

  .lap-and-up-three-quarters, .lap-and-up-six-eighths, .lap-and-up-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  .lap-and-up-one-fifth, .lap-and-up-two-tenths {
    width: 20%;
  }

  .lap-and-up-two-fifths, .lap-and-up-four-tenths {
    width: 40%;
  }

  .lap-and-up-three-fifths, .lap-and-up-six-tenths {
    width: 60%;
  }

  .lap-and-up-four-fifths, .lap-and-up-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  .lap-and-up-one-sixth, .lap-and-up-two-twelfths {
    width: 16.666%;
  }

  .lap-and-up-five-sixths, .lap-and-up-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  .lap-and-up-one-eighth {
    width: 12.5%;
  }

  .lap-and-up-three-eighths {
    width: 37.5%;
  }

  .lap-and-up-five-eighths {
    width: 62.5%;
  }

  .lap-and-up-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  .lap-and-up-one-tenth {
    width: 10%;
  }

  .lap-and-up-three-tenths {
    width: 30%;
  }

  .lap-and-up-seven-tenths {
    width: 70%;
  }

  .lap-and-up-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  .lap-and-up-one-twelfth {
    width: 8.333%;
  }

  .lap-and-up-five-twelfths {
    width: 41.666%;
  }

  .lap-and-up-seven-twelfths {
    width: 58.333%;
  }

  .lap-and-up-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (max-width: 1023px) {
  /**
  * Whole
  */
  .portable-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  .portable-one-half, .portable-two-quarters, .portable-three-sixths, .portable-four-eighths, .portable-five-tenths, .portable-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  .portable-one-third, .portable-two-sixths, .portable-four-twelfths {
    width: 33.333%;
  }

  .portable-two-thirds, .portable-four-sixths, .portable-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  .portable-one-quarter, .portable-two-eighths, .portable-three-twelfths {
    width: 25%;
  }

  .portable-three-quarters, .portable-six-eighths, .portable-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  .portable-one-fifth, .portable-two-tenths {
    width: 20%;
  }

  .portable-two-fifths, .portable-four-tenths {
    width: 40%;
  }

  .portable-three-fifths, .portable-six-tenths {
    width: 60%;
  }

  .portable-four-fifths, .portable-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  .portable-one-sixth, .portable-two-twelfths {
    width: 16.666%;
  }

  .portable-five-sixths, .portable-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  .portable-one-eighth {
    width: 12.5%;
  }

  .portable-three-eighths {
    width: 37.5%;
  }

  .portable-five-eighths {
    width: 62.5%;
  }

  .portable-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  .portable-one-tenth {
    width: 10%;
  }

  .portable-three-tenths {
    width: 30%;
  }

  .portable-seven-tenths {
    width: 70%;
  }

  .portable-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  .portable-one-twelfth {
    width: 8.333%;
  }

  .portable-five-twelfths {
    width: 41.666%;
  }

  .portable-seven-twelfths {
    width: 58.333%;
  }

  .portable-eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (min-width: 1024px) {
  /**
  * Whole
  */
  .desk-one-whole {
    width: 100%;
  }

  /**
  * Halves
  */
  .desk-one-half, .desk-two-quarters, .desk-three-sixths, .desk-four-eighths, .desk-five-tenths, .desk-six-twelfths {
    width: 50%;
  }

  /**
  * Thirds
  */
  .desk-one-third, .desk-two-sixths, .desk-four-twelfths {
    width: 33.333%;
  }

  .desk-two-thirds, .desk-four-sixths, .desk-eight-twelfths {
    width: 66.666%;
  }

  /**
  * Quarters
  */
  .desk-one-quarter, .desk-two-eighths, .desk-three-twelfths {
    width: 25%;
  }

  .desk-three-quarters, .desk-six-eighths, .desk-nine-twelfths {
    width: 75%;
  }

  /**
  * Fifths
  */
  .desk-one-fifth, .desk-two-tenths {
    width: 20%;
  }

  .desk-two-fifths, .desk-four-tenths {
    width: 40%;
  }

  .desk-three-fifths, .desk-six-tenths {
    width: 60%;
  }

  .desk-four-fifths, .desk-eight-tenths {
    width: 80%;
  }

  /**
  * Sixths
  */
  .desk-one-sixth, .desk-two-twelfths {
    width: 16.666%;
  }

  .desk-five-sixths, .desk-ten-twelfths {
    width: 83.333%;
  }

  /**
  * Eighths
  */
  .desk-one-eighth {
    width: 12.5%;
  }

  .desk-three-eighths {
    width: 37.5%;
  }

  .desk-five-eighths {
    width: 62.5%;
  }

  .desk-seven-eighths {
    width: 87.5%;
  }

  /**
  * Tenths
  */
  .desk-one-tenth {
    width: 10%;
  }

  .desk-three-tenths {
    width: 30%;
  }

  .desk-seven-tenths {
    width: 70%;
  }

  .desk-nine-tenths {
    width: 90%;
  }

  /**
  * Twelfths
  */
  .desk-one-twelfth {
    width: 8.333%;
  }

  .desk-five-twelfths {
    width: 41.666%;
  }

  .desk-seven-twelfths {
    width: 58.333%;
  }

  .desk-eleven-twelfths {
    width: 91.666%;
  }
}
/**
 * If you have set the additional `$responsive-extra` variable to ‘true’ in
 * `_vars.scss` then you now have access to the following class available to
 * accomodate much larger screen resolutions.
 */
/* endif */
/*------------------------------------*\
    $PUSH
\*------------------------------------*/
/**
 * Push classes, to move grid items over to the right by certain amounts.
 */
/*------------------------------------*\
    $PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items over to the right by certain amounts.
 */
/*------------------------------------*\
    $BRAND
\*------------------------------------*/
/**
 * `.brand` is a quick and simple way to apply your brand face and/or color to
 * any element using a handy helper class.
 */
.brand {
  font-family: "Helvetica Neue", sans-serif!important;
  color: #4a8ec2!important;
}

.brand-face {
  font-family: "Helvetica Neue", sans-serif!important;
}

.brand-color,
.brand-colour {
  color: #4a8ec2!important;
}

/*------------------------------------*\
    $HELPER
\*------------------------------------*/
/**
 * A series of helper classes to use arbitrarily. Only use a helper class if an
 * element/component doesn’t already have a class to which you could apply this
 * styling, e.g. if you need to float `.main-nav` left then add `float:left;` to
 * that ruleset as opposed to adding the `.float--left` class to the markup.
 *
 * A lot of these classes carry `!important` as you will always want them to win
 * out over other selectors.
 */
/**
 * Add/remove floats
 */
.float--right {
  float: right !important;
}

.float--left {
  float: left !important;
}

.float--none {
  float: none !important;
}

/**
 * Text alignment
 */
.text--left {
  text-align: left  !important;
}

.text--center {
  text-align: center !important;
}

.text--right {
  text-align: right !important;
}

/**
 * Font weights
 */
.weight--light {
  font-weight: 300 !important;
}

.weight--normal {
  font-weight: 400 !important;
}

.weight--semibold {
  font-weight: 600 !important;
}

/**
 * Add/remove margins
 */
.push {
  margin: 24px !important;
}

.push--top {
  margin-top: 24px !important;
}

.push--right {
  margin-right: 24px !important;
}

.push--bottom {
  margin-bottom: 24px !important;
}

.push--left {
  margin-left: 24px !important;
}

.push--ends {
  margin-top: 24px !important;
  margin-bottom: 24px !important;
}

.push--sides {
  margin-right: 24px !important;
  margin-left: 24px !important;
}

.push-half {
  margin: 12px !important;
}

.push-half--top {
  margin-top: 12px !important;
}

.push-half--right {
  margin-right: 12px !important;
}

.push-half--bottom {
  margin-bottom: 12px !important;
}

.push-half--left {
  margin-left: 12px !important;
}

.push-half--ends {
  margin-top: 12px !important;
  margin-bottom: 12px !important;
}

.push-half--sides {
  margin-right: 12px !important;
  margin-left: 12px !important;
}

.flush {
  margin: 0 !important;
}

.flush--top {
  margin-top: 0 !important;
}

.flush--right {
  margin-right: 0 !important;
}

.flush--bottom {
  margin-bottom: 0 !important;
}

.flush--left {
  margin-left: 0 !important;
}

.flush--ends {
  margin-top: 0 !important;
  margin-bottom: 0 !important;
}

.flush--sides {
  margin-right: 0 !important;
  margin-left: 0 !important;
}

/**
 * Add/remove paddings
 */
.soft {
  padding: 24px !important;
}

.soft--top {
  padding-top: 24px !important;
}

.soft--right {
  padding-right: 24px !important;
}

.soft--bottom {
  padding-bottom: 24px !important;
}

.soft--left {
  padding-left: 24px !important;
}

.soft--ends {
  padding-top: 24px !important;
  padding-bottom: 24px !important;
}

.soft--sides {
  padding-right: 24px !important;
  padding-left: 24px !important;
}

.soft-half {
  padding: 12px !important;
}

.soft-half--top {
  padding-top: 12px !important;
}

.soft-half--right {
  padding-right: 12px !important;
}

.soft-half--bottom {
  padding-bottom: 12px !important;
}

.soft-half--left {
  padding-left: 12px !important;
}

.soft-half--ends {
  padding-top: 12px !important;
  padding-bottom: 12px !important;
}

.soft-half--sides {
  padding-right: 12px !important;
  padding-left: 12px !important;
}

.hard {
  padding: 0 !important;
}

.hard--top {
  padding-top: 0 !important;
}

.hard--right {
  padding-right: 0 !important;
}

.hard--bottom {
  padding-bottom: 0 !important;
}

.hard--left {
  padding-left: 0 !important;
}

.hard--ends {
  padding-top: 0 !important;
  padding-bottom: 0 !important;
}

.hard--sides {
  padding-right: 0 !important;
  padding-left: 0 !important;
}

/**
 * Pull items full width of `.island` parents.
 */
.full-bleed {
  margin-right: -24px !important;
  margin-left: -24px !important;
}
.islet .full-bleed {
  margin-right: -12px !important;
  margin-left: -12px !important;
}

/**
 * Add a help cursor to any element that gives the user extra information on
 * `:hover`.
 */
.informative {
  cursor: help !important;
}

/**
 * Mute an object by reducing its opacity.
 */
.muted {
  opacity: 0.5 !important;
  filter: alpha(opacity=50) !important;
}

/**
 * Align items to the right where they imply progression/movement forward, e.g.:
 *
   <p class=proceed><a href=#>Read more...</a></p>
 *
 */
.proceed {
  text-align: right !important;
}

/**
 * Add a right-angled quote to links that imply movement, e.g.:
 *
   <a href=# class=go>Read more</a>
 *
 */
.go:after {
  content: "\00A0»" !important;
}

/**
 * Apply capital case to an element (usually a `strong`).
 */
.caps {
  text-transform: uppercase !important;
}

/**
 * Hide content off-screen without resorting to `display:none;`, also provide
 * breakpoint specific hidden elements.
 */
.accessibility, .flex-direction-nav, .home__recent-post__header .byline,
.visuallyhidden {
  border: 0 !important;
  clip: rect(0 0 0 0) !important;
  height: 1px !important;
  margin: -1px !important;
  overflow: hidden !important;
  padding: 0 !important;
  position: absolute !important;
  width: 1px !important;
}

@media only screen and (max-width: 480px) {
  .accessibility--palm,
  .visuallyhidden--palm {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  .accessibility--lap,
  .visuallyhidden--lap {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
@media only screen and (min-width: 481px) {
  .accessibility--lap-and-up,
  .visuallyhidden--lap-and-up {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
@media only screen and (max-width: 1023px) {
  .accessibility--portable,
  .visuallyhidden--portable {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
@media only screen and (min-width: 1024px) {
  .accessibility--desk,
  .visuallyhidden--desk {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
@media only screen and (min-width: 1200px) {
  .accessibility--desk-wide,
  .visuallyhidden--desk-wide {
    border: 0 !important;
    clip: rect(0 0 0 0) !important;
    height: 1px !important;
    margin: -1px !important;
    overflow: hidden !important;
    padding: 0 !important;
    position: absolute !important;
    width: 1px !important;
  }
}
/* endif */
/*------------------------------------*\
    $CSSWIZARDRY-GRIDS
\*------------------------------------*/
/**
 * CONTENTS
 * INTRODUCTION.........How the grid system works.
 * VARIABLES............Your settings.
 * MIXINS...............Library mixins.
 * GRID SETUP...........Build the grid structure.
 * WIDTHS...............Build our responsive widths around our breakpoints.
 * PUSH.................Push classes.
 * PULL.................Pull classes.
 */
/*------------------------------------*\
    $INTRODUCTION
\*------------------------------------*/
/**
 * csswizardry grids provides you with widths to suit a number of breakpoints
 * designed around devices of a size you specify. Out of the box, csswizardry
 * grids caters to the following types of device:
 *
 * palm     --  palm-based devices, like phones and small tablets
 * lap      --  lap-based devices, like iPads or laptops
 * portable --  all of the above
 * desk     --  stationary devices, like desktop computers
 * regular  --  any/all types of device
 *
 * These namespaces are then used in the library to give you the ability to
 * manipulate your layouts based around them, for example:
 *
   <div class="grid__item  one-whole  lap--one-half  desk--one-third">
 *
 * This would give you a grid item which is 100% width unless it is on a lap
 * device, at which point it become 50% wide, or it is on a desktop device, at
 * which point it becomes 33.333% width.
 *
 * csswizardry grids also has push and pull classes which allow you to nudge
 * grid items left and right by a defined amount. These follow the same naming
 * convention as above, but are prepended by either `push--` or `pull--`, for
 * example:
 *
   `class="grid__item  one-half  push--one-half"`
 *
 * This would give you a grid item which is 50% width and pushed over to the
 * right by 50%.
 *
 * All classes in csswizardry grids follow this patten, so you should fairly
 * quickly be able to piece together any combinations you can imagine, for
 * example:
 *
   `class="grid__item  one-whole  lap--one-half  desk--one-third  push--desk--one-third"`
 *
   `class="grid__item  one-quarter  palm--one-half  push--palm--one-half"`
 *
   `class="grid__item  palm--one-third  desk--five-twelfths"`
 */
/*------------------------------------*\
    $VARIABLES
\*------------------------------------*/
/**
 * If you are building a non-responsive site but would still like to use
 * csswizardry-grids, set this to ‘false’:
 */
/**
 * Is this build mobile first? Setting to ‘true’ means that all grids will be
 * 100% width if you do not apply a more specific class to them.
 */
/**
 * Set the spacing between your grid items.
 */
/**
 * Would you like Sass’ silent classes, or regular CSS classes?
 */
/**
 * Would you like push and pull classes enabled?
 */
/**
 * Using `inline-block` means that the grid items need their whitespace removing
 * in order for them to work correctly. Set the following to true if you are
 * going to achieve this by manually removing/commenting out any whitespace in
 * your HTML yourself.
 *
 * Setting this to false invokes a hack which cannot always be guaranteed,
 * please see the following for more detail:
 *
 * github.com/csswizardry/csswizardry-grids/commit/744d4b23c9d2b77d605b5991e54a397df72e0688
 * github.com/csswizardry/inuit.css/issues/170#issuecomment-14859371
 */
/**
 * Define your breakpoints. The first value is the prefix that shall be used for
 * your classes (e.g. `.palm--one-half`), the second value is the media query
 * that the breakpoint fires at.
 */
/**
 * Define which namespaced breakpoints you would like to generate for each of
 * widths, push and pull. This is handy if you only need pull on, say, desk, or
 * you only need a new width breakpoint at mobile sizes. It allows you to only
 * compile as much CSS as you need. All are turned on by default, but you can
 * add and remove breakpoints at will.
 *
 * Push and pull shall only be used if `$push` and/or `$pull` and `$responsive`
 * have been set to ‘true’.
 */
/**
 * You do not need to edit anything from this line onward; csswizardry-grids is
 * good to go. Happy griddin’!
 */
/*------------------------------------*\
    $MIXINS
\*------------------------------------*/
/**
 * These mixins are for the library to use only, you should not need to modify
 * them at all.
 *
 * Enclose a block of code with a media query as named in `$breakpoints`.
 */
/**
 * Drop relative positioning into silent classes which can’t take advantage of
 * the `[class*="push--"]` and `[class*="pull--"]` selectors.
 */
/*------------------------------------*\
    $GRID SETUP
\*------------------------------------*/
/**
 * 1. Allow the grid system to be used on lists.
 * 2. Remove any margins and paddings that might affect the grid system.
 * 3. Apply a negative `margin-left` to negate the columns’ gutters.
 */
.grid {
  list-style: none;
  /* [1] */
  margin: 0;
  /* [2] */
  padding: 0;
  /* [2] */
  margin-left: -24px;
  /* [3] */
}

/**
 * 1. Cause columns to stack side-by-side.
 * 2. Space columns apart.
 * 3. Align columns to the tops of each other.
 * 4. Full-width unless told to behave otherwise.
 * 5. Required to combine fluid widths and fixed gutters.
 */
.grid__item {
  display: inline-block;
  /* [1] */
  padding-left: 24px;
  /* [2] */
  vertical-align: top;
  /* [3] */
  width: 100%;
  /* [4] */
  -webkit-box-sizing: border-box;
  /* [5] */
  -moz-box-sizing: border-box;
  /* [5] */
  box-sizing: border-box;
  /* [5] */
}

/**
 * Reversed grids allow you to structure your source in the opposite order to
 * how your rendered layout will appear. Extends `.grid`.
 */
.grid--rev {
  direction: rtl;
  text-align: left;
}
.grid--rev > .grid__item {
  direction: ltr;
  text-align: left;
}

/**
 * Gutterless grids have all the properties of regular grids, minus any spacing.
 * Extends `.grid`.
 */
.grid--full {
  margin-left: 0;
}
.grid--full > .grid__item {
  padding-left: 0;
}

/**
 * Align the entire grid to the right. Extends `.grid`.
 */
.grid--right {
  text-align: right;
}
.grid--right > .grid__item {
  text-align: left;
}

/**
 * Centered grids align grid items centrally without needing to use push or pull
 * classes. Extends `.grid`.
 */
.grid--center {
  text-align: center;
}
.grid--center > .grid__item {
  text-align: left;
}

/**
 * Align grid cells vertically (`.grid--middle` or `.grid--bottom`). Extends
 * `.grid`.
 */
.grid--middle > .grid__item {
  vertical-align: middle;
}

.grid--bottom > .grid__item {
  vertical-align: bottom;
}

/**
 * Create grids with narrower gutters. Extends `.grid`.
 */
.grid--narrow {
  margin-left: -12px;
}
.grid--narrow > .grid__item {
  padding-left: 12px;
}

/**
 * Create grids with wider gutters. Extends `.grid`.
 */
.grid--wide {
  margin-left: -48px;
}
.grid--wide > .grid__item {
  padding-left: 48px;
}

/*------------------------------------*\
    $WIDTHS
\*------------------------------------*/
/**
 * Create our width classes, prefixed by the specified namespace.
 */
/**
 * Our regular, non-responsive width classes.
 */
/**
 * Whole
 */
.one-whole {
  width: 100%;
}

/**
 * Halves
 */
.one-half, .two-quarters, .three-sixths, .four-eighths, .five-tenths, .six-twelfths {
  width: 50%;
}

/**
 * Thirds
 */
.one-third, .two-sixths, .four-twelfths {
  width: 33.333%;
}

.two-thirds, .four-sixths, .eight-twelfths {
  width: 66.666%;
}

/**
 * Quarters
 */
.one-quarter, .two-eighths, .three-twelfths {
  width: 25%;
}

.three-quarters, .six-eighths, .nine-twelfths {
  width: 75%;
}

/**
 * Fifths
 */
.one-fifth, .two-tenths {
  width: 20%;
}

.two-fifths, .four-tenths {
  width: 40%;
}

.three-fifths, .six-tenths {
  width: 60%;
}

.four-fifths, .eight-tenths {
  width: 80%;
}

/**
 * Sixths
 */
.one-sixth, .two-twelfths, .six-cols > li {
  width: 16.666%;
}

.five-sixths, .ten-twelfths {
  width: 83.333%;
}

/**
 * Eighths
 */
.one-eighth, .eight-cols > li {
  width: 12.5%;
}

.three-eighths {
  width: 37.5%;
}

.five-eighths {
  width: 62.5%;
}

.seven-eighths {
  width: 87.5%;
}

/**
 * Tenths
 */
.one-tenth {
  width: 10%;
}

.three-tenths {
  width: 30%;
}

.seven-tenths {
  width: 70%;
}

.nine-tenths {
  width: 90%;
}

/**
 * Twelfths
 */
.one-twelfth {
  width: 8.333%;
}

.five-twelfths {
  width: 41.666%;
}

.seven-twelfths {
  width: 58.333%;
}

.eleven-twelfths {
  width: 91.666%;
}

/**
 * Our responsive classes, if we have enabled them.
 */
@media only screen and (max-width: 480px) {
  /**
   * Whole
   */
  .palm--one-whole {
    width: 100%;
  }

  /**
   * Halves
   */
  .palm--one-half, .palm--two-quarters, .palm--three-sixths, .palm--four-eighths, .palm--five-tenths, .palm--six-twelfths {
    width: 50%;
  }

  /**
   * Thirds
   */
  .palm--one-third, .palm--two-sixths, .palm--four-twelfths {
    width: 33.333%;
  }

  .palm--two-thirds, .palm--four-sixths, .palm--eight-twelfths {
    width: 66.666%;
  }

  /**
   * Quarters
   */
  .palm--one-quarter, .palm--two-eighths, .palm--three-twelfths {
    width: 25%;
  }

  .palm--three-quarters, .palm--six-eighths, .palm--nine-twelfths {
    width: 75%;
  }

  /**
   * Fifths
   */
  .palm--one-fifth, .palm--two-tenths {
    width: 20%;
  }

  .palm--two-fifths, .palm--four-tenths {
    width: 40%;
  }

  .palm--three-fifths, .palm--six-tenths {
    width: 60%;
  }

  .palm--four-fifths, .palm--eight-tenths {
    width: 80%;
  }

  /**
   * Sixths
   */
  .palm--one-sixth, .palm--two-twelfths {
    width: 16.666%;
  }

  .palm--five-sixths, .palm--ten-twelfths {
    width: 83.333%;
  }

  /**
   * Eighths
   */
  .palm--one-eighth {
    width: 12.5%;
  }

  .palm--three-eighths {
    width: 37.5%;
  }

  .palm--five-eighths {
    width: 62.5%;
  }

  .palm--seven-eighths {
    width: 87.5%;
  }

  /**
   * Tenths
   */
  .palm--one-tenth {
    width: 10%;
  }

  .palm--three-tenths {
    width: 30%;
  }

  .palm--seven-tenths {
    width: 70%;
  }

  .palm--nine-tenths {
    width: 90%;
  }

  /**
   * Twelfths
   */
  .palm--one-twelfth {
    width: 8.333%;
  }

  .palm--five-twelfths {
    width: 41.666%;
  }

  .palm--seven-twelfths {
    width: 58.333%;
  }

  .palm--eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
   * Whole
   */
  .lap--one-whole {
    width: 100%;
  }

  /**
   * Halves
   */
  .lap--one-half, .lap--two-quarters, .lap--three-sixths, .lap--four-eighths, .lap--five-tenths, .lap--six-twelfths, .slide__img,
  .slide__info {
    width: 50%;
  }

  /**
   * Thirds
   */
  .lap--one-third, .lap--two-sixths, .lap--four-twelfths {
    width: 33.333%;
  }

  .lap--two-thirds, .lap--four-sixths, .lap--eight-twelfths {
    width: 66.666%;
  }

  /**
   * Quarters
   */
  .lap--one-quarter, .lap--two-eighths, .lap--three-twelfths {
    width: 25%;
  }

  .lap--three-quarters, .lap--six-eighths, .lap--nine-twelfths {
    width: 75%;
  }

  /**
   * Fifths
   */
  .lap--one-fifth, .lap--two-tenths {
    width: 20%;
  }

  .lap--two-fifths, .lap--four-tenths {
    width: 40%;
  }

  .lap--three-fifths, .lap--six-tenths {
    width: 60%;
  }

  .lap--four-fifths, .lap--eight-tenths {
    width: 80%;
  }

  /**
   * Sixths
   */
  .lap--one-sixth, .lap--two-twelfths {
    width: 16.666%;
  }

  .lap--five-sixths, .lap--ten-twelfths {
    width: 83.333%;
  }

  /**
   * Eighths
   */
  .lap--one-eighth {
    width: 12.5%;
  }

  .lap--three-eighths {
    width: 37.5%;
  }

  .lap--five-eighths {
    width: 62.5%;
  }

  .lap--seven-eighths {
    width: 87.5%;
  }

  /**
   * Tenths
   */
  .lap--one-tenth {
    width: 10%;
  }

  .lap--three-tenths {
    width: 30%;
  }

  .lap--seven-tenths {
    width: 70%;
  }

  .lap--nine-tenths {
    width: 90%;
  }

  /**
   * Twelfths
   */
  .lap--one-twelfth {
    width: 8.333%;
  }

  .lap--five-twelfths {
    width: 41.666%;
  }

  .lap--seven-twelfths {
    width: 58.333%;
  }

  .lap--eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (max-width: 1023px) {
  /**
   * Whole
   */
  .portable--one-whole {
    width: 100%;
  }

  /**
   * Halves
   */
  .portable--one-half, .portable--two-quarters, .portable--three-sixths, .portable--four-eighths, .portable--five-tenths, .portable--six-twelfths {
    width: 50%;
  }

  /**
   * Thirds
   */
  .portable--one-third, .portable--two-sixths, .portable--four-twelfths {
    width: 33.333%;
  }

  .portable--two-thirds, .portable--four-sixths, .portable--eight-twelfths {
    width: 66.666%;
  }

  /**
   * Quarters
   */
  .portable--one-quarter, .portable--two-eighths, .portable--three-twelfths {
    width: 25%;
  }

  .portable--three-quarters, .portable--six-eighths, .portable--nine-twelfths {
    width: 75%;
  }

  /**
   * Fifths
   */
  .portable--one-fifth, .portable--two-tenths {
    width: 20%;
  }

  .portable--two-fifths, .portable--four-tenths {
    width: 40%;
  }

  .portable--three-fifths, .portable--six-tenths {
    width: 60%;
  }

  .portable--four-fifths, .portable--eight-tenths {
    width: 80%;
  }

  /**
   * Sixths
   */
  .portable--one-sixth, .portable--two-twelfths {
    width: 16.666%;
  }

  .portable--five-sixths, .portable--ten-twelfths {
    width: 83.333%;
  }

  /**
   * Eighths
   */
  .portable--one-eighth {
    width: 12.5%;
  }

  .portable--three-eighths {
    width: 37.5%;
  }

  .portable--five-eighths {
    width: 62.5%;
  }

  .portable--seven-eighths {
    width: 87.5%;
  }

  /**
   * Tenths
   */
  .portable--one-tenth {
    width: 10%;
  }

  .portable--three-tenths {
    width: 30%;
  }

  .portable--seven-tenths {
    width: 70%;
  }

  .portable--nine-tenths {
    width: 90%;
  }

  /**
   * Twelfths
   */
  .portable--one-twelfth {
    width: 8.333%;
  }

  .portable--five-twelfths {
    width: 41.666%;
  }

  .portable--seven-twelfths {
    width: 58.333%;
  }

  .portable--eleven-twelfths {
    width: 91.666%;
  }
}
@media only screen and (min-width: 1024px) {
  /**
   * Whole
   */
  .desk--one-whole {
    width: 100%;
  }

  /**
   * Halves
   */
  .desk--one-half, .desk--two-quarters, .desk--three-sixths, .desk--four-eighths, .desk--five-tenths, .desk--six-twelfths, .slide__img,
  .slide__info {
    width: 50%;
  }

  /**
   * Thirds
   */
  .desk--one-third, .desk--two-sixths, .desk--four-twelfths {
    width: 33.333%;
  }

  .desk--two-thirds, .desk--four-sixths, .desk--eight-twelfths {
    width: 66.666%;
  }

  /**
   * Quarters
   */
  .desk--one-quarter, .desk--two-eighths, .desk--three-twelfths {
    width: 25%;
  }

  .desk--three-quarters, .desk--six-eighths, .desk--nine-twelfths {
    width: 75%;
  }

  /**
   * Fifths
   */
  .desk--one-fifth, .desk--two-tenths {
    width: 20%;
  }

  .desk--two-fifths, .desk--four-tenths {
    width: 40%;
  }

  .desk--three-fifths, .desk--six-tenths {
    width: 60%;
  }

  .desk--four-fifths, .desk--eight-tenths {
    width: 80%;
  }

  /**
   * Sixths
   */
  .desk--one-sixth, .desk--two-twelfths {
    width: 16.666%;
  }

  .desk--five-sixths, .desk--ten-twelfths {
    width: 83.333%;
  }

  /**
   * Eighths
   */
  .desk--one-eighth {
    width: 12.5%;
  }

  .desk--three-eighths {
    width: 37.5%;
  }

  .desk--five-eighths {
    width: 62.5%;
  }

  .desk--seven-eighths {
    width: 87.5%;
  }

  /**
   * Tenths
   */
  .desk--one-tenth {
    width: 10%;
  }

  .desk--three-tenths {
    width: 30%;
  }

  .desk--seven-tenths {
    width: 70%;
  }

  .desk--nine-tenths {
    width: 90%;
  }

  /**
   * Twelfths
   */
  .desk--one-twelfth {
    width: 8.333%;
  }

  .desk--five-twelfths {
    width: 41.666%;
  }

  .desk--seven-twelfths {
    width: 58.333%;
  }

  .desk--eleven-twelfths {
    width: 91.666%;
  }
}
/*------------------------------------*\
    $PUSH
\*------------------------------------*/
/**
 * Push classes, to move grid items over to the right by certain amounts.
 */
/*------------------------------------*\
    $PULL
\*------------------------------------*/
/**
 * Pull classes, to move grid items back to the left by certain amounts.
 */
/*------------------------------------*\
    EXAI.CSS
\*------------------------------------*/
/*------------------------------------*\
    $CONTENTS
\*------------------------------------*/
/**
 * CONTENTS............You’re reading it!
 * WARNING.............Here be dragons!
 * IMPORTS.............Begin importing the sections below
 *
 * MIXINS..............
 *
 * COMPASS.............Compass helps keep things simple
 *
 * FONTS...............The basic fonts Exai likes
 *
 * TYPOGRAPHY..........
 * MAIN................
 * IMAGES..............
 * TABLES..............Adapted from Pure.css
 *
 * MEDIA...............Expanding on the media object
 * PANE................A pane is a section of content
 * NAV.................Expanding on the nav object
 *
 * HEADER..............
 * NAV-MAIN............Main responsive navigation. Very complex.
 * NAVBAR..............Expands on NAV-MAIN, a Bootstrap/Foundation-style top bar
 * FORMS...............Adapted from Pure.css
 * COMMENTS............WP comments, using a Roots-based comment walker
 * GALLERY.............WP gallery, based on the matrix object
 * FOOTER..............Calls sticky footer
 *
 * WIDGETS.............WP widgets
 */
/*------------------------------------*\
    $WARNING
\*------------------------------------*/
/*
 * inuit.css, being an OO framework, works in keeping with the open/closed
 * principle. The variables you set previously are now being used throughout
 * inuit.css to style everything we need for a base. Any custom styles SHOULD
 * NOT be added or modified in inuit.css directly, but added via your theme
 * stylesheet as per the open/closed principle:
 *
 * csswizardry.com/2012/06/the-open-closed-principle-applied-to-css
 *
 * Try not to edit any CSS beyond this point; if you find you need to do so
 * it is a failing of the framework so please tweet at @inuitcss.
 */
/*------------------------------------*\
    $IMPORTS
\*------------------------------------*/
/**
 * Generic utility styles etc.
 */
/*------------------------------------*\
    $UI-MIXINS
\*------------------------------------*/
/**
 * Compass
 */
/**
 * Fonts
 */
/**
 * Base styles; unclassed HTML elements etc.
 */
/*------------------------------------*\
	$UI-TYPOGRAPHY
\*------------------------------------*/
h6, .zeta {
  text-transform: uppercase;
}

/**
 * Definition lists.
 */
dl dt {
  font-weight: 700;
}
dl dd {
  font-style: italic;
}

/**
 * Preformatted text blocks.
 */
code,
kbd,
pre,
samp,
tt,
var {
  font-family: Consolas, "Andale Mono WT", "Andale Mono", "Lucida Console", "Lucida Sans Typewriter", "DejaVu Sans Mono", "Bitstream Vera Sans Mono", "Liberation Mono", "Nimbus Mono L", Monaco, "Courier New", Courier, monospace;
}

code,
pre {
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  -ms-border-radius: 0;
  -o-border-radius: 0;
  border-radius: 0;
  background-color: gray;
  border: 2px solid #ff2f34;
  padding: 3px;
}

pre {
  padding-left: 24px;
}

/*------------------------------------*\
    $UI-MAIN
\*------------------------------------*/
body {
  background-color: #cccccc;
}

.container {
  margin: 0 auto;
  max-width: 1140px;
}

.root {
  background-color: #cccccc;
}

.brand {
  color: #ff2f34 !important;
  font-family: "proxima-nova", Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT", "Myriad Pro", Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue", Helvetica, Arial, sans-serif !important;
  font-weight: 700 !important;
}

a {
  -webkit-transition: all 300ms ease;
  -moz-transition: all 300ms ease;
  -ms-transition: all 300ms ease;
  -o-transition: all 300ms ease;
  transition: all 300ms ease;
  text-decoration: none;
}
a, a:visited {
  color: #ff2f34;
}
a:hover, a:active {
  color: #9e1b34;
}

/*------------------------------------*\
    $UI-IMAGES
\*------------------------------------*/
/**
 * Not just images, but videos and other embeds too!
 */
/*
 * Responsive images
 *
 * 1. Fluid images for posts, comments, and widgets
 * 2. ^^overrides inuit.css rule :(
 * 3. Make sure images with WordPress-added height and width attributes are scaled correctly.
 * 4. Make sure videos and embeds fit their containers.
 *
 */
img, img.size-full, img.size-large, img.wp-post-image, img[width], img[height], img[class*="align"], img[class*="wp-image-"], img[class*="attachment-"] {
  height: auto;
  max-width: 100%;
}

.entry-content img,
.entry-summary img,
.comment-content img,
.widget img,
.wp-caption img {
  height: auto;
  max-width: 100%;
}

.wp-caption {
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  -ms-border-radius: 0;
  -o-border-radius: 0;
  border-radius: 0;
  background-color: #e6e6e6;
  padding: 6px;
}
.wp-caption.alignleft + ul,
.wp-caption.alignleft + ol {
  list-style-position: inside;
}

.caption,
.wp-caption .wp-caption__text,
.wp-caption .wp-caption-text,
.entry-caption,
.gallery-caption {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429;
  color: #220e10;
  font-style: italic;
  font-weight: 300;
  padding-left: 6px;
  padding-top: 6px;
}

embed,
object,
video {
  height: auto;
  max-width: 100%;
}

iframe {
  /* 4 */
  max-width: 100%;
}

/* Override the Twitter embed fixed width. */
.entry-content .twitter-tweet-rendered {
  max-width: 100% !important;
}

img.wp-smiley,
.rsswidget img {
  border: 0;
  border-radius: 0;
  box-shadow: none;
  margin-bottom: 0;
  margin-top: 0;
  padding: 0;
}

/*------------------------------------*\
	$UI-TABLES
\*------------------------------------*/
/**
 * Striped tables
 */
.table--striped tbody tr:nth-of-type(odd) {
  background-color: #b3b3b3;
}

/**
 * Bordered tables
 */
.table--bordered {
  border: 1px solid #9e1b34;
}
.table--bordered thead {
  background-color: #999999;
}

/**
 * A table with borders, but only horizontally.
 */
.table--bordered--horizontal td,
.table--bordered--horizontal th {
  border-width: 0 0 1px 0;
  border-bottom: 1px solid #9e1b34;
}
.table--bordered--horizontal thead tr:last-child th {
  border-bottom-width: 2px;
}
.table--bordered--horizontal tbody > tr:last-child td {
  border-bottom-width: 0;
}

/**
 * A table with borders, but only vertically.
 *
 * Works nicely with `.table--striped`
 */
.table--bordered--vertical td,
.table--bordered--vertical th {
  border-width: 0 0 0 1px;
  border-left: 1px solid #9e1b34;
}
.table--bordered--vertical tbody > tr td:first-child,
.table--bordered--vertical thead > tr th:first-child {
  border-left-width: 0;
}

/**
 * A combination of the hoz and vert tables.
 *
 * Forms a hashed or criss-crossed pattern.
 *
 * Must specify both vertical and horizontal border classes.
 */
.table--bordered--vertical.table--bordered--horizontal td,
.table--bordered--vertical.table--bordered--horizontal th {
  border-width: 0 0 1px 1px;
  text-align: center;
}

/**
 * Objects and abstractions
 */
/*------------------------------------*\
    $UI-OBJECT-MEDIA
\*------------------------------------*/
/*------------------------------------*\
    $UI-OBJECT-PANE
\*------------------------------------*/
/**
 * Provides default styles for panes on a page.
 *
 * For example, a pane can provide basic padding around
 * the .main and .sidebar sections. It can also provide
 * a background or borders for more specific sections on a page.
 */
.pane, .comment {
  margin-bottom: 24px;
}

.pane__content {
  padding: 24px;
}

/*------------------------------------*\
    $UI-OBJECT-NAV
\*------------------------------------*/
/**
 * Add vertical dividers to list elements.
 *
 * For use with the nav object. Include on a `.nav` element.
 */
/**
 * Components, complex structures
 */
/*------------------------------------*\
    $UI-HEADER
\*------------------------------------*/
/**
 * When the top navbar is enabled, most of these styles
 * will be overriden by the settings in the navbar SCSS file.
 */
.banner__inner {
  background-color: #9e1b34;
}

.brand {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.33333;
}

/*------------------------------------*\
    $UI-MAIN-NAV
\*------------------------------------*/
/**
 * This is the main navigation bar.
 * It is very complex.
 *
 * It is mainly used near the top of a page,
 * but it can appear in the footer for no-js situations.
 *
 * E.G.
	<header>
		<div class="container">
			<a class="brand" href="#"></a>
			<a class="btn btn--navbar menu-link" data-toggle="collapse" data-target=".nav-collapse">
				<i class="icon-reorder"></i>
				<span class="accessibility">Menu</span>
			</a>
			<nav class="main-nav" role="navigation">
				<ul class="nav">
					...
				</ul>
			</nav>
		</div>
	</header>
 *
 * Heavily based upon Brad Frost's multi-toggle navigation pattern.
 * http://codepen.io/bradfrost/full/qwJvF
 */
/**
 * Menu toggle for smaller screens.
 */
.menu-link {
  float: right;
}

.main-nav {
  background-color: #ff2f34;
  color: white;
  -webkit-transition: all 0.3s ease-out;
  -moz-transition: all 0.3s ease-out;
  -ms-transition: all 0.3s ease-out;
  -o-transition: all 0.3s ease-out;
  transition: all 0.3s ease-out;
  /*ul*/
}
.main-nav.active {
  max-height: 55em;
}
.main-nav .level-1 {
  border-top: 1px solid #808080;
}
.main-nav a {
  display: block;
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
  padding: 12px;
  position: relative;
}
.main-nav a, .main-nav a:visited {
  color: white;
}
.main-nav a:hover, .main-nav a:active {
  background-color: black;
  color: #ff2f34;
}

.dropdown > a:after,
.dropdown--submenu > a:after {
  content: "\FF0B";
  display: block;
  font-size: 1.5em;
  padding: 0.25em 0.5em;
  text-decoration: none;
  position: absolute;
  right: 0;
  top: 0;
}
.dropdown > a.active:after,
.dropdown--submenu > a.active:after {
  content: "\FE63";
  text-decoration: none;
}

.dropdown__menu > li a {
  background-color: #333333;
}

.js .main-nav,
.js .dropdown__menu {
  overflow: hidden;
  max-height: 0;
}
.js .main-nav.active,
.js .dropdown__menu.active {
  max-height: 55em;
}

@media only screen and (max-width: 1023px) {
  .main-nav {
    clear: both;
    background-color: #333333;
    /*ul*/
    /*ul*/
    /*ul*/
    /*ul*/
  }
  .main-nav ul > li {
    border-top: 1px solid #9e1b34;
  }
  .main-nav ul > li:last-child {
    border-bottom: 1px solid #9e1b34;
  }
  .main-nav .level-2 > li a:hover, .main-nav .level-2 > li a:active,
  .main-nav .level-3 > li a:hover,
  .main-nav .level-3 > li a:active,
  .main-nav .level-4 > li a:hover,
  .main-nav .level-4 > li a:active {
    background-color: black;
  }
  .main-nav .level-2 > li a {
    padding-left: 24px;
  }
  .main-nav .level-2 > li a, .main-nav .level-2 > li a:visited {
    background-color: rgba(0, 0, 0, 0.3);
  }
  .main-nav .level-3 > li a {
    padding-left: 48px;
  }
  .main-nav .level-3 > li a, .main-nav .level-3 > li a:visited {
    background-color: rgba(0, 0, 0, 0.5);
  }
  .main-nav .level-4 > li a {
    padding-left: 72px;
  }
  .main-nav .level-4 > li a, .main-nav .level-4 > li a:visited {
    background-color: rgba(0, 0, 0, 0.7);
  }
}
@media only screen and (min-width: 1024px) {
  .dropdown__toggle,
  .menu-link {
    display: none;
  }

  .js .main-nav,
  .js .dropdown__menu {
    max-height: none;
    overflow: visible;
  }
  .js .dropdown__menu {
    display: none;
  }
  .js .nav li:hover > .dropdown__menu {
    display: block;
  }

  .main-nav {
    /*ul*/
  }
  .main-nav a {
    border: 0;
  }
  .main-nav .level-1 {
    margin: 0;
    border: 0;
  }
  .main-nav .level-1 > li {
    position: relative;
  }
  .main-nav .level-1 > li,
  .main-nav .level-1 > li > a {
    display: inline-block;
  }

  .dropdown > a {
    padding-right: 2em;
  }
  .dropdown > a:after, .dropdown > a.active:after {
    font-size: 16px;
    font-size: 1rem;
    line-height: 1.5;
    content: "\25BC";
    text-decoration: none;
    padding-top: 12px;
  }
  .dropdown li {
    position: relative;
  }

  .dropdown__menu {
    position: absolute;
    width: 12em;
  }
  .dropdown__menu a {
    color: white;
  }

  .dropdown--submenu .dropdown__menu {
    top: 0;
    left: 12em;
  }
}
/*------------------------------------*\
    $UI-NAVBAR
\*------------------------------------*/
/**
 * A Bootstrap/Foundation style top navbar.
 * 
 * Must be turned on in `lib/config.php`.
 *
 * Extends `nav-main`.
 */
.navbar {
  background-color: #333333;
  color: white;
}
.navbar .brand {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1;
  border-right: 1px solid #333;
  display: inline-block;
  font-weight: bold;
  float: left;
  padding: 12px;
}
.navbar .main-nav a {
  color: white;
}

@media only screen and (min-width: 1024px) {
  .navbar .brand {
    border-right: 0;
  }
  .navbar .main-nav > .nav > li {
    border-left: 1px solid #9e1b34;
  }
  .navbar .main-nav > .nav > li:last-child {
    border-right: 1px solid #9e1b34;
  }
}
/*------------------------------------*\
	$UI-FORMS
\*------------------------------------*/
/**
 * There's a few things to note here.
 *
 * All text-input boxes should have the class `.text-input`
 * or else they might break! In general, this makes styling easier.
 */
form,
fieldset,
input,
select,
textarea,
.text-input {
  margin: 0;
}

fieldset {
  border: 0;
  padding: 12px 0;
}

legend {
  border: 0;
  color: #333;
  display: block;
  font-size: 20px;
  *margin-left: -7px;
  margin-bottom: .3em;
  padding: .3em 0;
  white-space: normal;
  width: 100%;
}

input[readonly], input[readonly]:focus,
select[readonly],
select[readonly]:focus,
textarea[readonly],
textarea[readonly]:focus,
.text-input[readonly],
.text-input[readonly]:focus {
  background: #eee;
  color: #777;
  border-color: #9e1b34;
}
input:focus:invalid,
select:focus:invalid,
textarea:focus:invalid,
.text-input:focus:invalid {
  color: #b94a48;
  border: 1px solid #ee5f5b;
}
input:focus:invalid:focus,
select:focus:invalid:focus,
textarea:focus:invalid:focus,
.text-input:focus:invalid:focus {
  border-color: #e9322d;
}

select {
  border: 1px solid #9e1b34;
  background-color: #fff;
}
select[multiple] {
  height: auto;
}

.checkbox,
.radio {
  margin: 12px 0;
  display: block;
}

label,
.label {
  display: inline-block;
  margin: 12px 0 6px;
  font-size: 90%;
  font-weight: 700;
}

textarea {
  overflow: auto;
  vertical-align: top;
}

button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0;
}
button[disabled],
input[disabled] {
  cursor: default;
}

button,
input[type=button],
input[type=reset],
input[type=submit] {
  -webkit-appearance: button;
  cursor: pointer;
  *overflow: visible;
}

input[type=file],
input[type=radio],
input[type=checkbox] {
  padding: 0;
  *height: 24px;
  *width: 24px;
}
input[type=file]:focus,
input[type=radio]:focus,
input[type=checkbox]:focus {
  outline: thin dotted #9e1b34;
  outline: 1px auto #129FEA;
}
input[type=file]:focus:invalid:focus,
input[type=radio]:focus:invalid:focus,
input[type=checkbox]:focus:invalid:focus {
  outline-color: #e9322d;
}

input[type=text],
input[type=password],
input[type=email],
input[type=url],
input[type=date],
input[type=month],
input[type=time],
input[type=datetime],
input[type=datetime-local],
input[type=week],
input[type=number],
input[type=search],
input[type=tel],
input[type=color],
select,
textarea,
.text-area {
  -webkit-transition: 0.3s linear border;
  -moz-transition: 0.3s linear border;
  -ms-transition: 0.3s linear border;
  -o-transition: 0.3s linear border;
  transition: 0.3s linear border;
  cursor: text;
  padding: 6px;
  display: inline-block;
  border: 1px solid #9e1b34;
  font-size: .8em;
  box-shadow: inset 0 0 3px #9e1b34;
  border-radius: 0;
  -webkit-font-smoothing: antialiased;
}
input[type=text]:focus,
input[type=password]:focus,
input[type=email]:focus,
input[type=url]:focus,
input[type=date]:focus,
input[type=month]:focus,
input[type=time]:focus,
input[type=datetime]:focus,
input[type=datetime-local]:focus,
input[type=week]:focus,
input[type=number]:focus,
input[type=search]:focus,
input[type=tel]:focus,
input[type=color]:focus,
select:focus,
textarea:focus,
.text-area:focus {
  outline: 0;
  outline: thin dotted \9;
  border-color: #129FEA;
}
input[type=text][disabled],
input[type=password][disabled],
input[type=email][disabled],
input[type=url][disabled],
input[type=date][disabled],
input[type=month][disabled],
input[type=time][disabled],
input[type=datetime][disabled],
input[type=datetime-local][disabled],
input[type=week][disabled],
input[type=number][disabled],
input[type=search][disabled],
input[type=tel][disabled],
input[type=color][disabled],
select[disabled],
textarea[disabled],
.text-area[disabled] {
  cursor: not-allowed;
  background-color: #eaeded;
  color: #cad2d3;
}

input[type=color] {
  cursor: auto;
}

/**
 * Forms, neatly stacked on top of one another.
 *
	<form class="form form--stacked">
		<fieldset>
			<legend>A Stacked Form</legend>

			<label for="email">Email</label>
			<input id="email" type="email" placeholder="Email" class="text-input">

			<label for="password">Password</label>
			<input id="password" type="password" placeholder="Password" class="text-input">

			<button type="submit" class="btn btn--small btn--positive">Sign in</button>
		</fieldset>
	</form>
 *
 */
.form--stacked input[type=text],
.form--stacked input[type=password],
.form--stacked input[type=email],
.form--stacked input[type=url],
.form--stacked input[type=date],
.form--stacked input[type=month],
.form--stacked input[type=time],
.form--stacked input[type=datetime],
.form--stacked input[type=datetime-local],
.form--stacked input[type=week],
.form--stacked input[type=number],
.form--stacked input[type=search],
.form--stacked input[type=tel],
.form--stacked input[type=color],
.form--stacked select,
.form--stacked label,
.form--stacked textarea {
  display: block;
  margin: 6px 0;
}

/**
 * Stacked form with labels aligned to the left edge.
 *
	<form class="form form--aligned">
		<fieldset>
			<div class="form__control-group">
				<label for="name">Username</label>
				<input id="name" type="text" placeholder="Username" class="text-input">
			</div>

			<div class="form__control-group">
				<label for="password">Password</label>
				<input id="password" type="password" placeholder="Password" class="text-input">
			</div>

			<div class="form__controls">
				<label for="cb" class="checkbox">
					<input id="cb" type="checkbox"> I've read the terms and conditions
				</label>

				<button type="submit" class="btn btn--small btn--positive">Submit</button>
			</div>
		</fieldset>
	</form>
 *
 */
.form--aligned input,
.form--aligned textarea,
.form--aligned select,
.form--aligned .text-input {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  vertical-align: middle;
}

.form__control-group {
  margin-bottom: 6px;
}
.form__control-group label {
  text-align: right;
  display: inline-block;
  vertical-align: middle;
  width: 10em;
  margin: 0 12px 0 0;
}

.form__controls {
  margin: 24px 0 0 10em;
}

/**
 * Form messages
 */
.form-message {
  display: block;
  color: #666;
  font-size: 90%;
}

/**
 * Inline help text and form messages
 */
.help-inline,
.form-message--inline {
  display: inline-block;
  *display: inline;
  *zoom: 1;
  color: #666;
  font-size: 12px;
  padding-left: .3em;
  vertical-align: middle;
}

/**
 * Text input with fully-rounded edges (e.g. Safari style)
 *
	<form class="form">
		<input type="text" class="text-input  text-input--rounded  text-input">
		<button type="submit" class="btn btn--small">Search</button>
	</form>
 *
 */
/*input*/
.text-input--rounded {
  border-radius: 2em;
  padding: .5em 1em;
}

/**
 * Grouped form inputs
 *
	<form class="form">
		<fieldset class="form__group">
			<input type="text" class="one-half  text-input" placeholder="Username">
			<input type="text" class="one-half  text-input" placeholder="Password">
			<input type="email" class="one-half  text-input" placeholder="Email">
		</fieldset>

		<button type="submit" class="btn btn--small one-half btn--positive">Sign in</button>
	</form>
 *
 */
.form__group fieldset {
  margin-bottom: 10px;
}
.form__group button {
  margin: .35em 0;
}
.form__group input {
  display: block;
  padding: 10px;
  margin: 0;
  border-radius: 0;
  position: relative;
  top: -1px;
}
.form__group input:focus {
  z-index: 2;
}
.form__group input:first-child {
  top: 1px;
  border-radius: 0 0 0 0;
}
.form__group input:last-child {
  top: -2px;
  border-radius: 0 0 0 0;
}

/**
 * Search forms.
 */
/*form*/
.form--search {
  font-family: "proxima-nova", Frutiger, "Frutiger Linotype", Univers, Calibri, "Gill Sans", "Gill Sans MT", "Myriad Pro", Myriad, "DejaVu Sans Condensed", "Liberation Sans", "Nimbus Sans L", Tahoma, Geneva, "Helvetica Neue", Helvetica, Arial, sans-serif;
}
.form--search input[type=search],
.form--search button[type=submit] {
  border-radius: 0;
  vertical-align: middle;
}
.form--search input[type=search] {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  border: 0;
}
.form--search button[type=submit] {
  border-left: 1px solid #777;
}

@media only screen and (max-width: 480px) {
  button[type=submit] {
    margin: .7em 0 0;
  }

  input[type=text],
  input[type=password],
  input[type=email],
  input[type=url],
  input[type=date],
  input[type=month],
  input[type=time],
  input[type=datetime],
  input[type=datetime-local],
  input[type=week],
  input[type=number],
  input[type=tel],
  input[type=color],
  label {
    margin-bottom: .3em;
    display: block;
  }

  .form__group input[type=text],
  .form__group input[type=password],
  .form__group input[type=email],
  .form__group input[type=url],
  .form__group input[type=date],
  .form__group input[type=month],
  .form__group input[type=time],
  .form__group input[type=datetime],
  .form__group input[type=datetime-local],
  .form__group input[type=week],
  .form__group input[type=number],
  .form__group input[type=search],
  .form__group input[type=tel],
  .form__group input[type=color] {
    margin-bottom: 0;
  }

  .form__control-group label {
    margin-bottom: .3em;
    text-align: left;
    display: block;
    width: 100%;
  }

  .form__controls {
    margin: 1.5em 0 0;
  }

  .help-inline,
  .form-message--inline,
  .form-message {
    display: block;
    font-size: 80%;
    padding: .2em 0 .8em;
  }

  /**
   * Search forms should always be displayed inline-block.
   */
  /*form*/
  .form--search button[type=submit] {
    margin: 0;
  }
}
/*------------------------------------*\
    $UI-COMMENTS
\*------------------------------------*/
.comment {
  background-color: white;
  border: 1px solid #9e1b34;
  border-right-width: 0;
  margin-left: 12px;
}

.comment__body {
  margin-bottom: 24px;
}

/* ul */
.comment-thread {
  margin-left: 0;
}

.comment.depth-1 {
  border-right-width: 1px;
}

/*------------------------------------*\
	$UI-GALLERY
\*------------------------------------*/
.multi-list > li > a {
  display: block;
  line-height: 0;
}

/**
 * Provide more column options.
 * 
 * Apply these classes alongside the `.matrix` or `.multi-list` classes on
 * lists to determine how wide their columns are.
 */
.one-col > li {
  width: auto;
}

.seven-cols > li {
  width: 14.285714286%;
}

.nine-cols > li {
  width: 11.111111111%;
}

/*------------------------------------*\
    $UI-FOOTER
\*------------------------------------*/
.footer__inner {
  background-color: #fbbfb1;
  color: white;
  height: 100%;
}

/**
 * Style trumps; helper and brand classes
 */
/*------------------------------------*\
    $UI-WIDGETS
\*------------------------------------*/
.widget {
  margin-bottom: 48px;
}
.widget ul {
  list-style: none;
  margin-left: 24px;
}
.widget select {
  width: 100%;
}

/**
 * Base imports.
 */
/*------------------------------------*\
    TEMPLE UPDATE -- MIXINS
\*------------------------------------*/
/**
 * Mixin for producing cut corners.
 *
 * Used by the pane object.
 * Some easy-to-use classes are are in the cut object file.
 *
 * ^Depends on Compass.
 *
 * Many thanks to Charlotte Dann for the original idea!
 * http://codepen.io/pouretrebelle/pen/pbwIj
 *
 * ^TODO Gradient method has not been defined yet
 * ^TODO What's the effect of using ceil() or not?
 * ^TODO Options for top cuts
 *
 * $color           | mixed  | The color to be used. This is also applied to the parent element.
 * $size            | px/em  | Size of the cut corner
 * $corner          | string | The corner(s) to cut. E.G. 'bottom-left', 'top-both'
 * $margin          | mixed  | The amount of margin for the bottom of the element. This value is added on to the $size.
 * $positioning     | bool   | Does the element already have relative or absolute positioning? If so, set this to false.
 * $color-override  | bool   | Set to true to only change color, nothing else
 * $margin-override | bool   | Set to true to only change margin, nothing else. If using a top cut, $corner must be set to top-*
 * $type            | string | Use the pseudo-element or the gradient method
 */
/**
 * Set unhovered and hovered link colors easily.
 *
 * Unvisited/visited will be the same color,
 * hover/active will be the same color.
 */
/**
 * Nav object mixin
 *
 * Useful for overriding nav object in different media queries.
 */
/**
 * Hide text only, not other content.
 *
 * Taken from Twitter Bootstrap v3.0.1
 */
/*------------------------------------*\
    $HELPER
\*------------------------------------*/
/**
 * Hide text only, not other content.
 */
.text-hide {
  font: 0/0 a;
  color: transparent;
  text-shadow: none;
  background-color: transparent;
  border: 0;
}

/*------------------------------------*\
    $UI-ICONS
\*------------------------------------*/
/*------------------------------------*\
    $CONTENTS
\*------------------------------------*/
/**
 * CONTENTS............You’re reading it!
 * ICON-FONT...........Icon font from IcoMoon
 * SKYCONS.............Skycons for Forecast.io widget
 */
/*------------------------------------*\
    $ICON-FONT
\*------------------------------------*/
/**
 * Custom icon font generated by IcoMoon.
 */
@font-face {
  font-family: 'TUUpdate';
  src: url("/assets/fonts/tuupdate/TUUpdate.eot");
  src: url("/assets/fonts/tuupdate/TUUpdate.eot?#iefix") format("embedded-opentype"), url("/assets/fonts/tuupdate/TUUpdate.woff") format("woff"), url("/assets/fonts/tuupdate/TUUpdate.ttf") format("truetype"), url("/assets/fonts/tuupdate/TUUpdate.svg#TUUpdate") format("svg");
  font-weight: normal;
  font-style: normal;
}

/* Use the following CSS code if you want to use data attributes for inserting your icons */
[data-icon]:before {
  font-family: 'TUUpdate';
  content: attr(data-icon);
  speak: none;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

/* Use the following CSS code if you want to have a class per icon */
/*
Instead of a list of all class selectors,
you can use the generic selector below, but it's slower:
[class*="icon-"] {
*/
.icon-menu, .icon-arrow-down, .icon-plus-alt, .icon-minus-alt, .icon-facebook, .icon-twitter, .icon-vimeo, .icon-feed, .icon-thumbs-up, .icon-clock-dark, .icon-comment-dark {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  font-family: 'TUUpdate';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
}

.icon-menu:before {
  content: "\e001";
}

.icon-arrow-down:before {
  content: "\e002";
}

.icon-plus-alt:before {
  content: "\e003";
}

.icon-minus-alt:before {
  content: "\e004";
}

.icon-facebook:before {
  content: "\e005";
}

.icon-twitter:before {
  content: "\e006";
}

.icon-vimeo:before {
  content: "\e007";
}

.icon-feed:before {
  content: "\e008";
}

.icon-thumbs-up:before {
  content: "\e009";
}

.icon-clock-dark:before {
  content: "\e00a";
}

.icon-comment-dark:before {
  content: "\e00b";
}

/**
 * Icon entities in variable form.
 */
/**
 * Mixins for including icons.
 */
/*------------------------------------*\
    $SKYCONS
\*------------------------------------*/
/**
 * The following styles are specific to the
 * Forecast.io widget derived from DuckDuckGo's
 * widget. The icons to be displayed are animated
 * Skycons by Dark Sky.
 *
 * https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/forecast/forecast.css
 * https://github.com/darkskyapp/skycons
 */
.icon--weather {
  width: 22px;
  height: 22px;
  margin-top: 2px;
}

.icon--weather--currently {
  display: block;
  float: right;
  width: 80px;
  height: 80px;
}

.icon--weather--day {
  display: inline-block;
  width: 26px;
  height: 26px;
  margin-top: 2px;
}

/**
 * For Skycons using HTML5 canvas.
 */
.canvas .icon--weather--currently {
  position: absolute;
  top: -4px;
  left: 27%;
  width: 100%;
  height: auto;
}
@media screen and (max-width: 480px) {
  .canvas .icon--weather--currently {
    right: 0;
    top: -8px;
  }
}
.canvas .icon--weather--day {
  width: 100%;
  height: auto;
  position: relative;
  z-index: 99;
}

/*------------------------------------*\
    $UI-TYPOGRAPHY
\*------------------------------------*/
/**
 * For top level headings.
 *
 * Used by pane headers, page headers.
 */
.h--main {
  margin-bottom: 0;
  text-transform: uppercase;
}

/*------------------------------------*\
    $UI-MAIN
\*------------------------------------*/
a {
  -webkit-transition: all 300ms ease;
  -moz-transition: all 300ms ease;
  -o-transition: all 300ms ease;
  transition: all 300ms ease;
  font-weight: 700;
}
a:hover, a:active {
  color: black;
}

/**
 * Objects.
 */
/*------------------------------------*\
    $UI-BUTTONS
\*------------------------------------*/
.btn--dark {
  background-color: #333333;
  font-weight: 600;
}
.btn--dark, .btn--dark:visited {
  color: white;
}
.btn--dark:hover, .btn--dark:active {
  color: white;
}

/*------------------------------------*\
    TEMPLE UPDATE -- OBJECT -- CUT
\*------------------------------------*/
/**
 * Silent classes for cutting corners off of things.
 */
/*------------------------------------*\
    $UI-LINK
\*------------------------------------*/
/**
 * Light links for dark backgrounds.
 */
.link--light, .slider a, .sidebar-pane--watch__content a, .content-info a, .link--light:visited, .slider a:visited, .sidebar-pane--watch__content a:visited, .content-info a:visited {
  color: #ff2f34;
}
.link--light:hover, .slider a:hover, .sidebar-pane--watch__content a:hover, .content-info a:hover, .link--light:active, .slider a:active, .sidebar-pane--watch__content a:active, .content-info a:active {
  color: white;
}

/*------------------------------------*\
    TEMPLE UPDATE -- OBJECT -- PANE
\*------------------------------------*/
/**
 *
  <section class="pane  pane--cut">
    <header class="pane__header--alpha  pane__header">
      <h1 class="pane__header--alpha__title  pane__header__title  h--main">Title</h1>
    </header>
    <div class="pane__content  pane--cut__content">
      Lorem ipsum dolor sit amet, consectetur adipisicing elit.
    </div>
  </section>
 *
 */
/**
 * A header for a pane.
 *
 * Appears directly above a pane.
 *
 * May also be applied to page titles.
 */
.pane__header__title,
.pane__header__title a {
  font-weight: 400;
}
.pane__header__title a, .pane__header__title a:visited {
  color: black;
}
.pane__header__title a:hover, .pane__header__title a:active {
  color: #ff2f34;
}

/**
 * A header with a solid background and large text.
 *
 * Extends `.pane__header`
 */
.pane__header--alpha {
  background-color: #ff2f34;
  padding-left: 24px;
}

.pane__header--alpha__title {
  letter-spacing: 0.08em;
}
@media only screen and (max-width: 1023px) {
  .pane__header--alpha__title {
    font-size: 24px;
    font-size: 1.5rem;
    line-height: 2;
  }
}

/**
 * A header with no background and slightly smaller text.
 *
 * Extends `.pane__header`
 */
.pane__header--beta {
  padding-bottom: 12px;
  padding-top: 12px;
}

.pane__header--beta__title {
  text-align: right;
}

/**
 * A pane with a cut-out bottom right corner.
 *
 * Extends `.pane`
 */
.pane--cut__content {
  background-color: white;
  position: relative;
  margin-bottom: 48.0px;
}
.pane--cut__content::before, .pane--cut__content::after {
  content: '';
  position: absolute;
  left: 0;
  z-index: 1;
}
.pane--cut__content::before {
  width: 100%;
  height: 48.0px;
  border-color: white transparent;
  border-style: solid;
  bottom: -48.0px;
  border-width: 48.0px 48px 0 0;
}
.pane--cut__content::after {
  bottom: -48.0px;
  width: 100%;
  background-color: white;
}

/**
 * Panes with very short content (or headers).
 *
 * Must have an inner element for vertically positioning content.
 *
  <header class="page-header  pane--short">
    <div class="page-header__inner  pane--short__inner">
      <h1 class="page-header__title  page-title  h--main">Yo!</h1>
    </div>
  </header>
 *
 */
.pane--short {
  /**
   * Override this default color by calling:
      @include corner-cut($color, $color-override: true);
   */
  background-color: white;
  position: relative;
  margin-bottom: 48px;
  padding-left: 24px;
  padding-right: 24px;
}
.pane--short::before, .pane--short::after {
  content: '';
  position: absolute;
  left: 0;
  z-index: 1;
}
.pane--short::before {
  width: 100%;
  height: 24.0px;
  border-color: white transparent;
  border-style: solid;
  bottom: -24.0px;
  border-width: 24.0px 24px 0 0;
}
.pane--short::after {
  bottom: -24.0px;
  width: 100%;
  background-color: white;
}

/**
 * Position the content somewhere
 * near the center of the short pane.
 *
 * 1. Content must be on top of the corner cut pseudo-element.
 */
.pane--short__inner {
  overflow: hidden;
  position: relative;
  top: 12px;
  z-index: 99;
  /* [1] */
}
.pane--short__inner p {
  margin-bottom: 0;
}

/**
 * Components.
 */
/*------------------------------------*\
    $UI-HEADER
\*------------------------------------*/
/*a*/
.brand {
  display: block;
  float: left;
  padding: 0;
  position: relative;
}

.brand__logo {
  background-color: #9e1b34;
  display: inline-block;
  padding: 6px;
  position: absolute;
  z-index: 99999;
}
.brand__logo .icon-logo {
  width: 48px;
  height: 48px;
  background-size: 100%;
  display: block;
}

.brand__about {
  margin: 0;
  padding-left: 60px;
  padding-top: 6px;
  padding-bottom: 6px;
  vertical-align: top;
}

.brand__about__site-title,
.brand__about__site-tagline {
  margin: 0;
}
.brand__about__site-title, .brand__about__site-title:visited,
.brand__about__site-tagline,
.brand__about__site-tagline:visited {
  color: white;
}
.brand__about__site-title:active, .brand__about__site-title:hover,
.brand__about__site-tagline:active,
.brand__about__site-tagline:hover {
  color: black;
}

.brand__about__site-title {
  line-height: 2;
  text-transform: uppercase;
  padding-right: 6px;
}

.brand__about__site-tagline {
  font-family: "proxima-nova-condensed", "Lato", "Open Sans Condensed", "Source Sans Pro", "Helvetica Neue Condensed", "Arial Narrow", sans-serif;
  font-weight: 100;
}

.drawer {
  background-color: black;
}

@media only screen and (max-width: 480px) {
  .brand__logo .icon-logo {
    width: 30px;
    height: 30px;
  }

  .brand__about {
    padding-left: 42px;
  }

  .brand__about__site-title {
    line-height: 1.333333333333;
  }

  /**
   * Nav context.
   *
   * Determines the nav's context, not its internal styling.
   */
  .menu-link {
    margin: 0;
    padding: 24px 12px;
  }
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  /**
   * Nav context.
   *
   * Determines the nav's context, not its internal styling.
   */
  .menu-link {
    margin: 18px 12px;
    padding: 6px 12px;
  }
}
@media only screen and (max-width: 1023px) {
  .brand__about__site-title {
    font-size: 24px;
    font-size: 1.5rem;
  }

  .brand__about__site-tagline {
    font-size: 16px;
    font-size: 1rem;
  }
}
@media only screen and (min-width: 481px) {
  /*a*/
  .brand {
    white-space: nowrap;
  }

  .brand__about__site-title,
  .brand__about__site-tagline {
    display: inline-block;
  }

  .brand__about__site-title {
    font-size: 30px;
    font-size: 1.875rem;
  }

  .brand__about__site-tagline {
    font-size: 20px;
    font-size: 1.25rem;
  }
}
@media only screen and (min-width: 1024px) {
  /*header*/
  .banner {
    margin-bottom: 48px;
  }

  .brand {
    padding-left: 48px;
  }

  .brand__logo {
    background-color: #9e1b34;
    margin-bottom: 20px;
    height: 112.0px;
  }
  .brand__logo::before, .brand__logo::after {
    content: '';
    position: absolute;
    left: 0;
    z-index: 1;
  }
  .brand__logo::before {
    width: 100%;
    height: 20px;
    border-color: #9e1b34 transparent;
    border-style: solid;
    bottom: -20px;
    border-width: 20px 20px 0 20px;
  }
  .brand__logo::after {
    bottom: -20px;
    width: 100%;
    background-color: #9e1b34;
  }
  .brand__logo .icon-logo {
    position: relative;
    z-index: 999;
    height: 120px;
    width: 120px;
  }

  .brand__about {
    padding-left: 156px;
  }

  .brand__about__site-title {
    font-size: 48px;
    font-size: 3rem;
    line-height: 72px;
  }

  .brand__about__site-tagline {
    font-size: 20px;
    font-size: 1.25rem;
  }
}
/*------------------------------------*\
    $UI-SLIDER
\*------------------------------------*/
.slider {
  background-color: black;
  margin: 0;
  padding: 0;
  position: relative;
}

.slides {
  zoom: 1;
}
.slides > li {
  display: none;
  -webkit-backface-visibility: hidden;
}
.slides img {
  width: 100%;
  display: block;
}

.slide__img,
.slide__info {
  display: inline-block;
  vertical-align: middle;
}

.slide__info {
  padding-left: 24px;
  padding-right: 24px;
}

.slide__info__title {
  margin-top: 24px;
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  .slide__info__title {
    font-size: 20px;
    font-size: 1.25rem;
    line-height: 1.2;
  }
}
@media only screen and (min-width: 720px) and (max-width: 1023px) {
  .slide__info__title {
    font-size: 30px;
    font-size: 1.875rem;
  }
}
@media only screen and (min-width: 1024px) {
  .slide__info__title {
    margin-top: 0;
  }
}

.slide__info__dek {
  color: white;
  margin-top: 24px;
  margin-bottom: 24px;
}
@media only screen and (min-width: 481px) and (max-width: 1023px) {
  .slide__info__dek {
    display: none;
  }
}
@media only screen and (min-width: 720px) {
  .slide__info__dek {
    display: block;
  }
}
@media only screen and (min-width: 720px) and (max-width: 829px) {
  .slide__info__dek {
    font-size: 12px;
    font-size: 0.75rem;
  }
}
@media only screen and (min-width: 1024px) {
  .slide__info__dek {
    margin-top: 0;
    margin-bottom: 0;
  }
}

/*
 * jQuery FlexSlider v2.2.0
 * http://www.woothemes.com/flexslider/
 *
 * Copyright 2012 WooThemes
 * Free to use under the GPLv2 license.
 * http://www.gnu.org/licenses/gpl-2.0.html
 *
 * Contributing author: Tyler Smith (@mbmufffin)
 */
/* Browser Resets
*********************************/
.flex-container a:active,
.flexslider a:active,
.flex-container a:focus,
.flexslider a:focus {
  outline: none;
}

.slides,
.flex-control-nav,
.flex-direction-nav {
  margin: 0;
  padding: 0;
  list-style: none;
}

/* No JavaScript Fallback */
/* If you are not using another script, such as Modernizr, make sure you
 * include js that eliminates this class on page load */
.no-js .slides > li:first-child {
  display: block;
}

/* FlexSlider Default Theme
*********************************/
.flex-viewport {
  -webkit-transition: all 1s ease;
  -moz-transition: all 1s ease;
  -o-transition: all 1s ease;
  transition: all 1s ease;
  max-height: 2000px;
}

.loading .flex-viewport {
  max-height: 300px;
}

.carousel li {
  margin-right: 5px;
}

/* Direction Nav */
/* Control Nav */
.flex-control-nav,
.flex-control-paging {
  padding: 12px;
  position: absolute;
  z-index: 999;
  top: 0;
  width: 100%;
  text-align: center;
}
.flex-control-nav li,
.flex-control-paging li {
  display: inline-block;
  *display: inline;
  margin: 0 6px;
  zoom: 1;
}
.flex-control-nav li a,
.flex-control-paging li a {
  width: 11px;
  height: 11px;
  display: block;
  background-color: white;
  cursor: pointer;
  text-indent: -9999px;
}
.flex-control-nav li a:hover,
.flex-control-paging li a:hover {
  background-color: #333333;
}
.flex-control-nav li a.flex-active,
.flex-control-paging li a.flex-active {
  background-color: gray;
  cursor: default;
}

@media only screen and (min-width: 481px) {
  .flex-control-nav,
  .flex-control-paging {
    top: auto;
    bottom: 0;
    text-align: left;
  }
}
/*------------------------------------*\
    $UI-NAV
\*------------------------------------*/
/**
 * Contains styles that override the navigation
 * component and its internal workings.
 */
/**
 * Nav links are not bold.
 */
.main-nav a {
  font-weight: 400;
}

/**
 * Uppercase the nav items.
 */
.main-nav__primary-navigation li {
  text-transform: uppercase;
}

/**
 * Customize the look of the menu link for small screens.
 */
.menu-link {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  background-color: black;
  line-height: 1;
}
.menu-link:hover, .menu-link:active {
  color: white;
}

/**
 * ^^override exai nav icons
 */
.dropdown > a:after, .dropdown > a.active:after,
.dropdown--submenu > a:after,
.dropdown--submenu > a.active:after {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  padding: 12px;
}
.dropdown > a:after,
.dropdown--submenu > a:after {
  font-family: 'TUUpdate';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  content: "\e003";
}
.dropdown > a.active:after,
.dropdown--submenu > a.active:after {
  font-family: 'TUUpdate';
  speak: none;
  font-style: normal;
  font-weight: normal;
  font-variant: normal;
  text-transform: none;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  content: "\e004";
}

/**
 * Hide the social menu on small screens
 */
.main-nav__social-menu {
  display: none;
}

@media only screen and (min-width: 1024px) {
  /**
   * Must be a higher z-index to counteract the strange effects of the corner cut.
   */
  .dropdown__menu {
    z-index: 9999999;
  }

  /**
   * 1. Float menus to the right
   * 2. Show social menu
   * 3. Prevent inline-block whitespace
   */
  .main-nav__menus {
    float: right;
    /* [1] */
    font-size: 0;
    /* [3] */
  }

  .main-nav__primary-navigation,
  .main-nav__social-menu {
    display: inline-block;
    /* [2] */
    margin-bottom: 0;
    vertical-align: middle;
    font-size: 16px;
    /* [3] */
  }

  /**
   * Change top-level dropdown icon to caret
   */
  .dropdown > a {
    padding-right: 36px;
  }
  .dropdown > a:after, .dropdown > a.active:after {
    font-family: 'TUUpdate';
    speak: none;
    font-style: normal;
    font-weight: normal;
    font-variant: normal;
    text-transform: none;
    line-height: 1;
    -webkit-font-smoothing: antialiased;
    content: "\e002";
    font-size: 16px;
    font-size: 1rem;
    line-height: 1.5;
  }

  /**
   * Height constraints.
   */
  /*ul*/
  .level-1 > li a {
    line-height: 2;
  }

  /**
   * Social menu formatting.
   */
  .main-nav__social-menu__item {
    border-left: 1px solid white;
    vertical-align: middle;
  }
  .main-nav__social-menu__item:last-child {
    border-right: 1px solid white;
  }
  .main-nav__social-menu__item a {
    background-color: black;
    padding: 12px 18px;
  }
  .main-nav__social-menu__item i {
    display: inline-block;
    vertical-align: middle;
  }
}
/*------------------------------------*\
    $UI-ALERTS
\*------------------------------------*/
/**
 * The primary type of alert.
 */
.alert--alpha__inner {
  background-color: #fff000;
  position: relative;
}
.alert--alpha__inner::before {
  border-color: #fff000 transparent;
}
.alert--alpha__inner::after {
  background-color: #fff000;
}

.alert--alpha__content a, .alert--alpha__content a:visited {
  color: black;
}
.alert--alpha__content a:hover, .alert--alpha__content a:active {
  color: #ff2f34;
}

/*------------------------------------*\
    $UI-PAGE-HEADER
\*------------------------------------*/
/**
 * The modifier classes should correspond directly
 * with the page slug they are modifying.
 * See `templates/page.php` for more info.
 */
/**
 * A cut-pane page header with heavy text and solid background.
 */
.page-header {
  background-color: white;
  position: relative;
  margin-bottom: 48px;
}

/**
 * Line-height has to be this specific
 * to accomodate for that 900 weight!
 */
.page-header__title {
  font-weight: 900;
  line-height: 1.33333333333;
}

@media only screen and (max-width: 1023px) {
  .page-header__title {
    font-size: 16px;
    font-size: 1rem;
    line-height: 2.333333333;
  }
}
.page-header--news {
  background-color: #ff2f34;
  position: relative;
}
.page-header--news::before {
  border-color: #ff2f34 transparent;
}
.page-header--news::after {
  background-color: #ff2f34;
}

.page-header--entertainment {
  background-color: #fbbfb1;
  position: relative;
}
.page-header--entertainment::before {
  border-color: #fbbfb1 transparent;
}
.page-header--entertainment::after {
  background-color: #fbbfb1;
}

.page-header--sportsdesk {
  background-color: #9e1b34;
  position: relative;
}
.page-header--sportsdesk::before {
  border-color: #9e1b34 transparent;
}
.page-header--sportsdesk::after {
  background-color: #9e1b34;
}

.page-header--sportsdesk__title {
  color: white;
}

/*------------------------------------*\
    $UI-FORMS
\*------------------------------------*/
.form--search__label,
input.form--search__input {
  display: inline-block;
}

.form--search__label {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2;
  font-weight: 700;
  font-style: italic;
}

input.form--search__input {
  -webkit-border-radius: 0;
  -moz-border-radius: 0;
  -ms-border-radius: 0;
  -o-border-radius: 0;
  border-radius: 0;
  -webkit-box-shadow: none;
  -moz-box-shadow: none;
  box-shadow: none;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  margin-left: 12px;
  width: 75%;
}

/*------------------------------------*\
    $UI-EXCERPT
\*------------------------------------*/
/**
 * Force "read more" link to display inline with the preceding `<p>` (the excerpt).
 */
.slide__info__dek p,
.home__recent-post__content p {
  display: inline;
}

.home__recent-post__content {
  margin-bottom: 24px;
  margin-bottom: 1.5rem;
}

/*------------------------------------*\
    $UI-COMMENTS
\*------------------------------------*/
.comment {
  background-color: rgba(0, 0, 0, 0.25);
  padding: 12px;
}
.comment a, .comment a:visited {
  color: black;
}
.comment a:hover, .comment a:active {
  color: white;
}

.comment__heading {
  margin-bottom: 6px;
}

/*------------------------------------*\
    $UI-SIDEBAR
\*------------------------------------*/
.sidebar a {
  font-weight: 700;
}

.sidebar-pane__header {
  padding-right: 12px;
}

.sidebar-pane__content {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
}
.sidebar-pane__content .btn {
  font-size: 14px;
  font-size: 0.875rem;
  font-weight: 400;
  text-align: center;
  max-width: 100%;
}

@media only screen and (max-width: 480px) {
  .sidebar-pane__content .btn {
    width: 100%;
  }
}
@media only screen and (min-width: 1024px) {
  .sidebar-pane__content .btn {
    width: 100%;
  }
}
/**
 * sidebar-pane: "Watch"
 */
.sidebar-pane--watch__content {
  font-size: 16px;
  font-size: 1rem;
  background-color: #333333;
  color: white;
  font-style: italic;
  line-height: 1.5;
  text-align: center;
}
.sidebar-pane--watch__content a {
  font-weight: 700;
}

/**
 * sidebar-pane: "WeatherWatch"
 */
.sidebar-pane--weather__content {
  background-color: white;
}

/**
 * sidebar-pane: "SportsDesk"
 */
.sidebar-pane--sportsdesk__content {
  background-color: white;
}

/**
 * sidebar-pane: "Social"
 */
.sidebar-pane--social__content {
  background-color: #ff2f34;
  color: white;
}
.sidebar-pane--social__content a, .sidebar-pane--social__content a:visited {
  color: black;
}
.sidebar-pane--social__content a.btn, .sidebar-pane--social__content a:hover, .sidebar-pane--social__content a:active {
  color: white;
}

.sidebar-pane--social__content--facebook {
  border-bottom: 1px solid white;
}

/*------------------------------------*\
    $UI-WIDGETS
\*------------------------------------*/
/*------------------------------------*\
    $CONTENTS
\*------------------------------------*/
/**
 * CONTENTS...................You’re reading it!
 * GENERAL....................General widgets
 * TWITTER WIDGET PRO.........Plugin-specific styles
 * CUSTOM FACEBOOK FEED.......Plugin-specific styles
 * YOUTUBE CHANNEL GALLERY....Plugin-specific styles
 * FORECAST WIDGET............Forecast.io widget
 */
/*------------------------------------*\
    $GENERAL
\*------------------------------------*/
.widget:last-of-type {
  margin-bottom: 0;
}

.widgets {
  padding-bottom: 24px;
  padding-top: 24px;
}

/*------------------------------------*\
    $TWITTER-WIDGET-PRO
\*------------------------------------*/
.widget_twitter h3 {
  display: none;
}
.widget_twitter ul {
  margin-left: 0;
}
.widget_twitter .time-meta {
  text-transform: uppercase;
}
.widget_twitter .time-meta a {
  font-weight: 400;
}
.widget_twitter .in-reply-to-meta {
  display: none;
}

/*------------------------------------*\
    $CUSTOM-FACEBOOK-FEED
\*------------------------------------*/
#cff p {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
}

.cff-item {
  border-bottom: 0 !important;
}

.cff-date {
  color: black;
  text-align: right;
  text-transform: uppercase;
}

/*------------------------------------*\
    $YOUTUBE-CHANNEL-GALLERY
\*------------------------------------*/
/**
 * For the Update Now and Update Ahora pages.
 */
.ytctitle {
  font-size: 36px;
  font-size: 2.25rem;
  line-height: 1.33333;
  font-family: "proxima-nova-condensed", "Lato", "Open Sans Condensed", "Source Sans Pro", "Helvetica Neue Condensed", "Arial Narrow", sans-serif;
}

/**
 * While frighteningly specific, this forces gallery cells
 * to 100% of their parent on small screens. :)
 */
@media only screen and (max-width: 1023px) {
  .ytcplayer-wrapper {
    margin-bottom: 120px !important;
  }

  .ytccf .ytc-columns3 li {
    width: 100% !important;
    padding-bottom: 96px !important;
  }

  .ytctdescription {
    font-size: 20px;
    font-size: 1.25rem;
    line-height: 1.2;
  }
}
@media only screen and (min-width: 1024px) {
  .ytc-row {
    margin-bottom: 48px;
  }

  .ytctdescription {
    font-size: 14px;
    font-size: 0.875rem;
    line-height: 1.71429;
  }
}
/*------------------------------------*\
    $FORECAST-WIDGET
\*------------------------------------*/
/**
 * Styles for the Forecast.io weather widget.
 *
 * Heavily based off of DuckDuckGo's JS widget.
 *
 * https://github.com/duckduckgo/zeroclickinfo-spice/blob/master/share/spice/forecast/forecast.css
 */
.forecast-widget {
  width: 100%;
  font-weight: 300;
  max-width: 300px;
  color: #333;
  margin: 0 auto 24px;
  height: 170px;
  position: relative;
}
.forecast-widget.alert {
  height: 208px;
}
.forecast-widget a {
  color: #333;
}

.forecast {
  margin-top: 12px;
}

.forecast__currently,
.forecast__daily {
  width: 50%;
}

.forecast__currently {
  display: inline-block;
  position: absolute;
  left: 0;
  padding-top: 5px;
}
.forecast__currently .temp {
  width: 50%;
  text-align: left;
}
.forecast__currently .temp__str {
  font-size: 48px;
  font-size: 3rem;
  font-weight: bold;
  line-height: 1;
}
.forecast__currently .temp__dir,
.forecast__currently .temp__feel {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
  display: block;
  position: relative;
  top: -1px;
  font-weight: normal;
  line-height: 18px;
}
.forecast__currently .summary {
  font-size: 20px;
  font-size: 1.25rem;
  line-height: 1.2;
  font-weight: bold;
  margin-top: 8px;
  clear: both;
}
.forecast__currently .wind {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429;
  margin-top: 4px;
}

.forecast__daily {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429;
  display: table;
  position: absolute;
  right: 0;
  top: 0;
  text-align: center;
}

.forecast__daily__day {
  display: table-cell;
  text-align: center;
}
.forecast__daily__day .day-name {
  font-weight: bold;
  display: inline-block;
  width: 100%;
}

/**
 * Dynamic temperature bar.
 */
.temp-bar {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
  position: relative;
  width: 20px;
  margin: 18px auto 0;
  border-radius: 200px;
  background-color: #333;
  white-space: nowrap;
}

.temp-bar__hi,
.temp-bar__lo {
  position: absolute;
  width: 100%;
  left: 2px;
}

.temp-bar__hi {
  top: -20px;
}

.temp-bar__lo {
  bottom: -20px;
}

@media screen and (max-width: 480px) {
  .forecast-widget {
    min-width: 200px;
    height: auto;
  }

  .forecast__currently {
    width: 100%;
    position: relative;
    display: block;
    margin: auto;
    left: auto;
    padding-top: 0;
  }
  .forecast__currently .top {
    position: relative;
    left: 6px;
    width: 200px;
    margin: 0 auto;
  }

  .forecast__daily {
    position: relative;
    width: 100%;
    right: auto;
    left: auto;
    margin: auto;
    top: auto;
    margin-top: 1em;
    margin-bottom: 3em;
  }

  .forecast__daily__day .day-name {
    font-size: 12px;
    font-size: 0.75rem;
    line-height: 2;
  }

  /**
   * Dynamic temperature bar.
   */
  .temp-bar {
    width: 15px;
  }
}
/*------------------------------------*\
    $UI-FOOTER
\*------------------------------------*/
/*#footer*/
.content-info {
  background-color: #333333;
  padding-top: 24px;
  padding-bottom: 24px;
  padding-right: 24px;
}

/**
 * No background on inner footer.
 *
 * ^^Overrides exai.css
 */
.footer__inner {
  background-color: transparent;
}

.footer__about {
  font-size: 12px;
  font-size: 0.75rem;
  line-height: 2;
  text-align: right;
}

/**
 * Footer logo, floated to right.
 */
.footer__about__logo {
  float: right;
  margin: 0 24px;
  background-size: 100px;
  height: 100px;
  width: 100px;
}

/**
 * Footer "About" links menu
 */
.footer__about__links {
  display: inline-block;
  margin-bottom: 0;
}
.footer__about__links .divider {
  display: inline-block;
  padding: 0 6px;
}
.footer__about__links li:last-child .divider {
  display: none;
}

/**
 * Page/post-specific imports.
 */
/*------------------------------------*\
    $UI-POST
\*------------------------------------*/
.dek {
  font-size: 24px;
  font-size: 1.5rem;
  line-height: 1;
  font-family: "proxima-nova-condensed", "Lato", "Open Sans Condensed", "Source Sans Pro", "Helvetica Neue Condensed", "Arial Narrow", sans-serif;
  font-style: italic;
}

.post {
  margin-bottom: 48px;
}

/*h1*/
.post__header__meta {
  font-size: 14px;
  font-size: 0.875rem;
  line-height: 1.71429;
  border-top: 1px solid #cccccc;
  border-bottom: 1px solid #cccccc;
  margin-bottom: 48px;
  padding-top: 12px;
  padding-bottom: 12px;
}

.post__header__meta__updated,
.post__header__meta__byline,
.post__header__meta__categories,
.post__header__meta__comments-number {
  display: inline-block;
  padding-left: 6px;
  padding-right: 6px;
  vertical-align: middle;
}

.post__header__meta__categories ul {
  margin-bottom: 0;
}
@media only screen and (max-width: 480px) {
  .post__header__meta__categories ul {
    /**
     * `.nav--stacked` extends `.nav` and throws the list into vertical mode, e.g.:
     *
       <ul class="nav  nav--stacked">
           <li><a href=#>Home</a></li>
           <li><a href=#>About</a></li>
           <li><a href=#>Portfolio</a></li>
           <li><a href=#>Contact</a></li>
       </ul>
     *
     */
  }
  .post__header__meta__categories ul > li {
    display: list-item;
  }
  .post__header__meta__categories ul > li > a {
    display: block;
  }
}
@media only screen and (min-width: 481px) {
  .post__header__meta__categories ul {
    /**
     * Nav abstraction as per: csswizardry.com/2011/09/the-nav-abstraction
     * When used on an `ol` or `ul`, this class throws the list into horizontal mode
     * e.g.:
     *
       <ul class=nav>
           <li><a href=#>Home</a></li>
           <li><a href=#>About</a></li>
           <li><a href=#>Portfolio</a></li>
           <li><a href=#>Contact</a></li>
       </ul>
     *
     * Demo: jsfiddle.net/inuitcss/Vnph4
     *
     */
    list-style: none;
    margin-left: 0;
  }
  .post__header__meta__categories ul > li,
  .post__header__meta__categories ul > li > a {
    display: inline-block;
    *display: inline;
    zoom: 1;
  }
}
.post__header__meta__categories ul > li > a {
  font-weight: 400;
}

/*------------------------------------*\
    $UI-PAGE-HOME
\*------------------------------------*/
.home__recent-posts__content {
  background-color: white;
  position: relative;
  margin-bottom: 48.0px;
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
}
.home__recent-posts__content::before, .home__recent-posts__content::after {
  content: '';
  position: absolute;
  left: 0;
  z-index: 1;
}
.home__recent-posts__content::before {
  width: 100%;
  height: 48.0px;
  border-color: white transparent;
  border-style: solid;
  bottom: -48.0px;
  border-width: 48.0px 48px 0 0;
}
.home__recent-posts__content::after {
  bottom: -48.0px;
  width: 100%;
  background-color: white;
}

.home__recent-post__header time {
  text-transform: uppercase;
}

.home__recent-post__header__title {
  font-size: 16px;
  font-size: 1rem;
  line-height: 1.5;
  margin-bottom: 0;
}
.home__recent-post__header__title a, .home__recent-post__header__title a:visited {
  color: black;
}
.home__recent-post__header__title a:hover, .home__recent-post__header__title a:active {
  color: #ff2f34;
}

@media only screen and (min-width: 1024px) {
  .home__recent-posts__content,
  .home__recent-post__header__title {
    font-size: 14px;
    font-size: 0.875rem;
    line-height: 1.71429;
  }
}
.home__recent-posts--news__header {
  background-color: #ff2f34;
}

.home__recent-posts--news__header__title a, .home__recent-posts--news__header__title a:visited {
  color: black;
}
.home__recent-posts--news__header__title a:hover, .home__recent-posts--news__header__title a:active {
  color: white;
}

.home__recent-posts--entertainment__header {
  background-color: #fbbfb1;
}

.home__recent-posts--sportsdesk__header {
  background-color: #9e1b34;
}

.home__recent-posts--sportsdesk__header__title a, .home__recent-posts--sportsdesk__header__title a:visited {
  color: white;
}
.home__recent-posts--sportsdesk__header__title a:hover, .home__recent-posts--sportsdesk__header__title a:active {
  color: black;
}
